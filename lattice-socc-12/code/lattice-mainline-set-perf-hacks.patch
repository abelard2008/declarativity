diff --git a/lib/bud/lattice-core.rb b/lib/bud/lattice-core.rb
index 6147e70..da83044 100644
--- a/lib/bud/lattice-core.rb
+++ b/lib/bud/lattice-core.rb
@@ -429,6 +429,19 @@ class Bud::LatticeWrapper
     rv
   end
 
+  def do_unsafe_merge(lhs, rhs)
+    # return do_merge(lhs, rhs)
+    unless lhs.class <= Bud::Lattice
+      raise Bud::Error, "unexpected merge input: #{lhs.class}"
+    end
+    return lhs if rhs.nil?
+
+    unless rhs.class <= @klass
+      rhs = @klass.new(rhs)
+    end
+    lhs.merge_unsafe(rhs)
+  end
+
   def setup_wiring(input, kind)
     if input.class <= Bud::LatticeWrapper
       input.to_push_elem.wire_to(self, kind)
@@ -456,7 +469,11 @@ class Bud::LatticeWrapper
   # Merge "i" into @new_delta
   public
   def insert(i, source)
-    @new_delta = do_merge(current_new_delta, i)
+    if @klass == Bud::SetLattice
+      @new_delta = do_unsafe_merge(current_new_delta, i)
+    else
+      @new_delta = do_merge(current_new_delta, i)
+    end
   end
 
   def <=(i)
@@ -527,20 +544,36 @@ class Bud::LatticeWrapper
   end
 
   def merge_to_storage(v)
-    m = do_merge(current_value, v)
-    if m != current_value
-      @storage = m
-      @rescan_on_merge.each do |e|
-        if e.kind_of? Bud::ScannerElement
-          e.force_rescan = true
-        else
-          e.rescan = true
+    if @klass == Bud::SetLattice
+      old_size = current_value.reveal.size
+      @storage = do_unsafe_merge(current_value, v)
+      if @storage.reveal.size != old_size
+        @rescan_on_merge.each do |e|
+          if e.kind_of? Bud::ScannerElement
+            e.force_rescan = true
+          else
+            e.rescan = true
+          end
         end
+
+        return true
       end
-      return true
     else
-      return false
+      m = do_merge(current_value, v)
+      if m != current_value
+        @storage = m
+        @rescan_on_merge.each do |e|
+          if e.kind_of? Bud::ScannerElement
+            e.force_rescan = true
+          else
+            e.rescan = true
+          end
+        end
+        return true
+      end
     end
+
+    return false
   end
 
   def tick_deltas
diff --git a/lib/bud/lattice-lib.rb b/lib/bud/lattice-lib.rb
index 08b2b8a..6360132 100644
--- a/lib/bud/lattice-lib.rb
+++ b/lib/bud/lattice-lib.rb
@@ -216,6 +216,11 @@ class Bud::SetLattice < Bud::Lattice
     wrap_unsafe(@v | i.reveal)
   end
 
+  def merge_unsafe(i)
+    @v.merge(i.reveal)
+    self
+  end
+
   morph :intersect do |i|
     wrap_unsafe(@v & i.reveal)
   end
diff --git a/test/tc_lattice.rb b/test/tc_lattice.rb
index 46bbdef..f72261d 100644
--- a/test/tc_lattice.rb
+++ b/test/tc_lattice.rb
@@ -1101,6 +1101,7 @@ class TestSum < MiniTest::Unit::TestCase
 
     i.in_t <+ [["s2", 6]]
     i.tick
+    puts i.s3.current_value.reveal.to_a.sort.inspect
     assert_equal(true, i.done.current_value.reveal)
   end
 end
