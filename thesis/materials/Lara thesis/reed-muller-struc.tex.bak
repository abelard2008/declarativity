%\documentclass[journal]{IEEEtran}
%\documentclass[12pt]{article}
%\pagestyle{plain} \topmargin -0.60in \oddsidemargin 0.0625in
%\textheight 9.00in \textwidth 6.50in
%\renewcommand{\baselinestretch}{1.4}
%\parskip 0.20in

%\usepackage{times}
%\usepackage{psfig,latexsym}
%\usepackage{amstext,amssymb}
%\newtheorem{corollary}{Corollary}[section]
%\newtheorem{theorem}{Theorem}[section]
%\newtheorem{lemma}{Lemma}[section]
%\newtheorem{definition}{Definition}[section]
%\newtheorem{fact}{Fact}
%\newtheorem{remark}{Remark}[section]
%\newcommand{\x} {\mbox{x}}
%\newenvironment{proof}%
 %              {\par\noindent%
  %             \setlength{\parindent}{0em}%
   %            \setlength{\parskip}{1ex}%
    %           \textit{Proof:\nopagebreak[2]
%}}{\hfill\rule{1.5ex}{1.5ex}\par}
\newcommand{\revc}{{{\stackrel{c}{\leftarrow}}}}
\newcommand{\revca}{{{\stackrel{\mathbf{c_a}}{\leftarrow}}}}
\newcommand{\revcb}{{{\stackrel{\mathbf{c_b}}{\leftarrow}}}}
\newcommand {\bb}{\mathbf}
\newcommand{\tr}{\text{tr}}
\newcommand {\bt}[1]{\mathbf{\tilde{#1}}}
\newcommand {\bh}[1]{\mathbf{\hat{#1}}}
\newcommand{\blist}{    \begin{list}{$\bullet$}{\topsep 0.0in \partopsep
0.0in                \itemsep 0.05in \parsep
           0.0in \leftmargin 0.3in}}


\newcommand{\elist}{\end{list}}
%\pagenumbering{arabic}

%\documentclass[journal, twocolumn]{IEEEtran}


%\usepackage{amsmath}   % From the American Mathematical Society
                        % A popular package that provides many helpful commands
                        % for dealing with mathematics. Note that the AMSmath
                        % package sets \interdisplaylinepenalty to 10000 thus
                        % preventing page breaks from occurring within multiline

%\usepackage{times}
%\usepackage{psfig,latexsym}
%\usepackage{amstext,amssymb}
%\usepackage{amstext,amssymb}



% correct bad hyphenation here
\hyphenation{op-tical net-works semi-conduc-tor}


%\setlength{\textheight}{11.85cm}

%\begin{document}
%
% paper title
\chapter[Structural Properties of Reed-Muller Codes]{Structural Properties of Reed-Muller
Codes}\label{reed-muller-struc} In this Chapter we establish
several new structural properties of the first order Reed-Muller
codes. These properties, while also of independent interest, will
be used in the subsequent chapter that discusses the performance
of Reed-Muller codes under synchronization and substitution
errors. Having provided a definition of the first order
Reed-Muller codes in Section \ref{sectionRM1}, we prove several
runlength properties of these codes in Section \ref{sectionRM2}.
In particular, we establish several properties regarding the
runlength distribution (Subsection \ref{sectionRM21}), runs of
runs of codewords (Subsection \ref{sectionRM22}), as well as the
relationship between the message vector and the runs of its
codeword (Subsection \ref{sectionRM23}). Section
\ref{sectionRMconc} concludes this Chapter.


%% compare with version 1

%\begin{keywords} Synchronization, repetitions and deletions,
%Reed-Muller code, run-length properties.
%\end{keywords}

% Note that keywords are not normally used for peerreview papers.

% For peer review papers, you can put extra information on the cover
% page as needed:
% \begin{center} \bfseries EDICS Category: 3-BBND \end{center}
%
% For peerreview papers, inserts a page break and creates the second title.
% Will be ignored for other modes.
%% compare with version 1
%%\IEEEpeerreviewmaketitle




\section{First Order Reed-Muller Codes}\label{sectionRM1}
The first order Reed-Muller codes RM($1$,$m$) are linear $(2^m,
m+1)$ substitution-error correcting codes \cite{mws:77}. They have
good minimum distance, equal to $2^{m-1}$, simple encoding, and a
relatively low complexity maximum likelihood decoding algorithm
($O(n \log n)$ for $n=2^m$). On the negative side, they have low
rate.

From now on, let $C(m)$ denote the RM($1$,$m$) code. The code
$C(m)$ may be described by an $(m+1) \times 2^m$ generator matrix
$\mathbf{G_m}$ given by
\begin{equation*}\label{eq:g}
 \begin{array}{lll} \mathbf{G_m} &=
\left[ \begin{array}{c} \underline{1} \\ \mathbf{M_m} \end{array} \right] \\
{} & {}\\
{} &=\left[ \begin{array}{cccccccccc}
1 & 1 & 1 & 1 & 1 & \ldots & 1 & 1 & 1 & 1 \\
1 & 1 & 1 & 1 & 1 & \ldots & 0 & 0 & 0 & 0 \\
\ldots & \ldots & \ldots & \ldots &\ldots &\ldots & \ldots & \ldots & \ldots &\ldots\\
1 & 1 & 1 & 1 & 0 & \ldots & 0 & 0 & 0 & 0 \\
1 & 1 & 0 & 0 & 1 & \ldots & 1 & 1 & 0 & 0 \\
1 & 0 & 1 & 0 & 1 & \ldots & 1 & 0 & 1 & 0\\
\end{array}\right],
\end{array}
\end{equation*}

\noindent were $\underline{1}$ denotes the binary string of length
$2^m$ with all entries equal to 1, and the $m$ by $2^m$ submatrix
$\mathbf{M_m}$ consists of lexicographically decreasing binary
columns of length $m$. Observe that the $i^{\text{th}}$ row of
$\mathbf{G_m}$, for $1 <i \leq m+1$, consists of $2^{i-1}$
alternating runs of ones and zeros, and that each run is of length
$2^{m-i+1}$.

 For future
reference, we recall that every codeword in $C(m+1)$ is either the
concatenation of a codeword in $C(m)$ with itself or the
concatenation of a codeword in $C(m)$ with its bitwise complement
\cite[Thm. 2, pg. 374]{mws:77}. The concatenation of two binary
strings $a$ and $b$ will be written as $[a | b]$. If $c$ is a
codeword in $C(m)$ it is straightforward to check that its bitwise
complement, denoted $\overline{c}$, is also a codeword in $C(m)$.
Further, its reversal, i.e. the binary string got by reading $c$
from its end to its beginning, denoted $\revc$, is also a codeword
in $C(m)$. Since the operations of bitwise complementation and
reversal commute, we may unambiguously denote the complement of
the reversal of $c$ as $\overline{\revc}$.

We now establish several runlength properties of Reed-Muller
codes.

\section{Runlength Properties of the RM($1$,$m$)
Codes}\label{sectionRM2}

\subsection{Run-length distribution}\label{sectionRM21}
\begin{lemma}\label{Lem1}
The codewords in $C(m)$ can
be partitioned into $2^{m-1}+1$ distinct
non-empty groups $G_j^m$,
for $0 \leq j \leq 2^{m-1}$.
Here $G_j^m$ is comprised of
those codewords in $C(m)$ that have
$j$ runs of ones.
$G_0^m$ is comprised of
exactly one codeword, namely the all-zero codeword. This codeword will be denoted
$c_0^m(00)$.
There are 4 distinct codewords in each
group $G_j^m$, for $1 \le j  < 2^{m-1}$.
These codewords may be uniquely identified
by their first and last bit. They may
thus be unambiguously denoted as
$c_j^m(11)$, $c_j^m(10)$, $c_j^m(01)$,
and  $c_j^m(00)$ respectively.
There are 3 distinct
codewords in the group $G_{2^{m-1}}^m$.
These codewords may also be uniquely identified
by their first and last bit and may
be unambiguously denoted as
$c_{2^{m-1}}^m(11)$,
$c_{2^{m-1}}^m(10)$,
and  $c_{2^{m-1}}^m(01)$ respectively.
\end{lemma}

\noindent \textit{Proof:} The proof is by induction on $m$. For
$m=1$ and $m=2$ the statement can be verified by inspection.
Suppose the assertion holds for all $1 \le m \le m_0$.

Let us first consider the group $G_j^{m_0}$ for $1 \leq j <
2^{m_0-1}$. By assumption, it contains 4 codewords, unambiguously denoted
as  $c_j^{m_0}(11)$,
$c_j^{m_0}(01)$, $c_j^{m_0}(10)$, and $c_j^{m_0}(00)$ respectively.
Out of the eight possible concatenations of each such codeword with either itself or its complement, 3 result in codewords in
$G_{2j-1}^{m_0+1}$ (these are [$c_j^{m_0}(11)|c_j^{m_0}(11)$],
[$c_j^{m_0}(11)|$$\overline{c_j^{m_0}(11)}$], and
[$c_j^{m_0}(01)|$$\overline{c_j^{m_0}(01)}$]), 4 result in codewords
in $G_{2j}^{m_0+1}$ (these are [$c_j^{m_0}(01)|c_j^{m_0}(01)$],
[$c_j^{m_0}(10)|$ $\overline{c_j^{m_0}(10)}$],
[$c_j^{m_0}(10)|c_j^{m_0}(10)$], and
[$c_j^{m_0}(00)|c_j^{m_0}(00)$]), and 1 results in the codeword
[$c_j^{m_0}(00)|$$\overline{c_j^{m_0}(00)}$] in $G_{2j+1}^{m_0+1}$.
By varying $j$ from $1$ to $2^{m_0-1}-1$, inclusive,
we thus describe 3 codewords in $G_1^{m_0+1}$, 4 codewords in each
$G_{j'}^{m_0+1}$ for $ 2 \leq j' \leq 2^{m_0}-2$ and 1 codeword in
$G_{2^{m_0}-1}^{m_0+1}$ such that no two codewords that belong to
the same group $G_{j'}^{m_0+1}$ agree in both the first and the last bit.

Now consider the group $G_{2^{m_0-1}}^{m_0}$. By assumption it has
three codewords unambiguously denoted as
$c_{2^{m_0-1}}^{m_0}(11)$, $c_{2^{m_0-1}}^{m_0}(01)$, and
$c_{2^{m_0 -1}}^{m_0}(10)$ respectively. There are six
possibilities arising from concatenations of such a codeword with
itself or its complement. Of these, 3 result in codewords in
$G_{2^{m_0}-1}^{m_0+1}$ (these are $[c_{2^{m_0 -1}}^{m_0}(01)
|$$\overline {c_{2^{m_0-1}}^{m_0}(01)}]$ $[c_{2^{m_0
-1}}^{m_0}(11) |$$c_{2^{m_0 -1}}^{m_0}(11)]$, and $[c_{2^{m_0
-1}}^{m_0}(11) |$$\overline{c_{2^{m_0 -1}}^{m_0}(11)}]$) and the
remaining 3 result in the codewords of $G_{2^{m_0}}^{m_0+1}$. Note
that none of the latter three concatenations has both outer bits
equal to '0'. Note that we have now described a total of 4
codewords in the group $G_{2^{m_0}-1}^{m_0+1}$, no two agree in
both first and last bit, and we have also described 3 codewords in
the the group $G_{2^{m_0}}^{m_0+1}$ of the desired form.

The concatenation of the all-zero codeword in $C(m_0)$ with the
all-ones codeword yields the fourth codeword in $G_1^{m_0+1}$, and
its concatenation with itself yields the only codeword in $G_0^{m_0+1}$.

We have therefore described $1+4\times(2^{m_0}-1)+3=2^{m_0+2}$
codewords in $C(m_0+1)$, which is precisely the cardinality of
this code, and we showed that the proposed statement holds for
it.\hfill $\blacksquare$

By exploiting the result in Lemma~\ref{Lem1},
it is easy to verify
the following, which may also of course
be seen more directly.

\begin{lemma}\label{LE2}
For each $1 \leq k \leq 2^m$,
in $C(m)$ there are exactly 2 codewords which have a total of $k$
runs, and they are bitwise complements of each
other.
\end{lemma}

\noindent \textit{Proof:} The complementary codewords
$c_{j-1}^m(00)$ and $c_{j}^m(11)$ each have $2j-1$ runs. Letting
$j$ run from $1$ through $2^{m-1}$ gives $2^{m-1}$ such
complementary pairs of codewords. The complementary codewords
$c_j^m(10)$ and $c_j^m(01)$ each have
 $2j$ runs. Letting
$j$ run from $1$ to $2^{m-1}$
gives another
$2^{m-1}$ such complementary pairs
of codewords.
This completes the proof. \hfill $\blacksquare$


\begin{lemma}\label{LE3}
Consider a codeword $\mathbf{c}$ in $C(m)$. Either $\mathbf{c}$
has all its runs of the same length, which is a power of $2$, or
the runs in $\mathbf{c}$ are of two different lengths, and these
two lengths are consecutive powers of 2. In addition, if there are
runs of two different lengths in $\mathbf{c}$, the outer runs
(i.e. the leftmost run and the rightmost run) in $\mathbf{c}$ are
of the smaller length.
\end{lemma}

\noindent \textit{Proof:} The proof is by induction on $m$. It is
straightforward to check the truth of the statement for $m=1$ and
$m=2$. Suppose now that the given statement is true for all $1 \le
m \le m_0$. For a codeword $\mathbf{c}$ in $C(m_0)$ let
$[\mathbf{c} | \mathbf{c}]$ and $[\mathbf{c} |
\mathbf{\overline{c}}]$ denote the codewords in $C(m_0+1)$ that
are the concatenation of $\mathbf{c}$ with itself, and the
concatenation of $\mathbf{c}$ with its complement, respectively.

Suppose first that $\mathbf{c}$ has all its runs of the same
length, equal to $2^s$ for some $s \ge 0$. If $\mathbf{c}$ has the
same starting and ending bits then in the concatenation
$[\mathbf{c} | \mathbf{\overline{c}}]$ all runs have the same
length $2^s$, so the statement of the lemma holds. In the
concatenation $[\mathbf{c} | \mathbf{c}]$ all runs except the run
at the point of concatenation (if there are any such runs) have
length $2^s$ and the run at the point of concatenation has length
$2^{s+1}$. The proposed statement continues to be true both in the
case in which there are some runs other than the one at point of
concatenation and in the case when there are no such runs. If
$\mathbf{c}$ starts and ends with different bits, we may repeat
the previous argument mutatis mutandis.

Now suppose that $\mathbf{c}$ has runs of different lengths, which
are two consecutive powers of 2, say $2^s$ and $2^{s+1}$. By
assumption, the outer runs are of length $2^s$ each, and there is
at least one run of length $2^{s+1}$. As before, if $\mathbf{c}$
starts and ends in the same bit, the concatenation $[\mathbf{c} |
\mathbf{\overline{c}}]$ will have all its runs of lengths either
$2^s$ or $2^{s+1}$. Further, the outer runs in $[\mathbf{c} |
\mathbf{\overline{c}}]$ have the same length as the ones in
$\mathbf{c}$, i.e. they are of length $2^s$ each, so the statement
of the lemma is valid. In the concatenation $[\mathbf{c}
|\mathbf{c}]$, the last run in the left copy of $\mathbf{c}$ and
the first run in the right copy of $\mathbf{c}$ are merged
together, and all other runs are unchanged in length. By
assumption, the outer runs in $\mathbf{c}$ have length $2^s$ each,
so their merger results in a run in $[\mathbf{c} | \mathbf{c}]$ of
length $2 \times 2^s=2^{s+1}$. Thus all runs in $[\mathbf{c} |
\mathbf{c}]$ have length either $2^s$ or $2^{s+1}$. Since the
outer runs in $[\mathbf{c} |\mathbf{c}]$ are of the same length as
the outer runs in $\mathbf{c}$, they have length $2^s$, as
required. For $\mathbf{c}$ starting and ending in different bits,
we repeat this argument mutatis mutandis.

Since each
codeword in $C(m_0+1)$ can be written as a concatenation of a
codeword in $C(m_0)$ either with itself or with its complement,
the proof of the Lemma is complete.\hfill $\blacksquare$

\small\input{figure1.tex}


\normalsize
\begin{lemma}\label{LE4}
With the exception of the all-ones codeword, all codewords
belonging to the group $G_j^m$ for $2^{p-1}<j \leq 2^{p}$ for some
$p$, $0 \leq p \leq m-1$ have all runs of ones either of length
$2^{m-p-1}$ or of length $2^{m-p}$. Moreover, $(j-2^{p-1})\times
2$ runs out of these $j$ runs have length $2^{m-p-1}$, and the
remaining $2^{p}-j$ runs have length $2^{m-p}$.
\end{lemma}
\noindent \textit{Proof:} To prove the statement we use induction
on $m$. For small values of $m$, the proposed statement can be
verified directly. Suppose now that the assertion holds for some
$m=m_0$.

By Lemma~\ref{LE1}, the group $G_{j'}^{m_0}$ for $2^{p-1}< j' \leq
2^{p}$ for some $p$, $0 \leq p \leq m_0-1$ contains codewords
$c_{j'}^{m_0}(10)$, $c_{j'}^{m_0}(01)$, and $c_{j'}^{m_0}(11)$. If
$j' \neq 2^{m_0-1}$ it also contains $c_{j'}^{m_0}(00)$. There is
a single codeword in $G_0^{m_0}$ (the all-zeros codeword). Let us
now analyze all the possible concatenations of the codewords
belonging to the group $G_j^{m_0}, 0 \leq j \leq 2^{m_0-1}$ i.e.
of each codeword with itself and with its complement. By
Lemma~\ref{LE1} there are at most 4 codewords in $G_j^{m_0}$ so we
have to consider at most 8 different concatenations. In doing so,
the similar cases will be presented together.
\begin{itemize}
\item The concatenation of $c_j^{m_0}(11)$, if it exists, with
itself produces a codeword in $G_{2j-1}^{m_0+1}$ (see Arrow 1 in
Figure~\ref{pic:graph1}).

If $j=1$, $c_j^{m_0}(11)$ is the all-ones codeword in $C(m_0)$,
and the concatenation with itself produces the all-ones codeword
in $C(m_0+1)$. If $j>1$, the outer runs in $c_j^{m_0}(11)$ must be
of size $2^{m_0-p-1}$. (To see this not that if $j$ is a complete
power of 2, i.e. $j=2^p$ then all runs of ones, including the
outer runs, are of size $2^{m_0-p-1}$ by assumption, and if $j$ is
not a complete power of 2, i.e. $2^{p-1} < j < 2^p$ then the outer
runs must have size $2^{m_0-p-1}$ by Lemma~\ref{LE3}). In the
process of concatenation, two outer, smaller runs merge into one
larger run and all other runs of ones are unaltered. Therefore, in
the resulting codeword in $G_{2j-1}^{m_0+1}$, where $j>1$, and
$2^p < 2j-1 < 2^{p+1}$, there are $2\times (j-2^{p-1})\times
2-2=((2j-1)-2^{p})\times 2$ runs of ones of size
$2^{m_0-p-1}=2^{(m_0+1)-(p+1)-1}$, and
$2\times(2^p-j)+1=2^{p+1}-(2j-1)$ runs of ones of size
$2^{m_0-p}=2^{(m_0+1)-(p+1)}$ .

\item The concatenation of $c_j^{m_0}(11)$, if it exists, with its
complement produces a codeword in $G_{2j-1}^{m_0+1}$ (see Arrow 2
in Figure~\ref{pic:graph1}).

The complement of $c_j^{m_0}(11)$ is $c_{j-1}^{m_0}(00)$. By
assumption, $c_j^{m_0}(11)$ has $(j-2^{p-1})\times 2$ runs of ones
of size $2^{m_0-p-1}$, and $2^p-j$ runs of ones of size
$2^{m_0-p}$, for $j>1$. If $j=1$, then $p=0$, and the complement
is the all-zero codeword, so the result of the concatenation has a
single run of ones, of size $2^{m_0}=2^{(m_0+1)-1}$.

Suppose now that $j>1$. Then there is a corresponding $p$ such
that $2^{p-1} < j \leq 2^p$ and $0 < p \leq m_0-1$. Note that
$2^{p-1} \leq j-1 < 2^p$.

Case 1: $j-1=2^{p-1}$

Under this condition, the codeword $c_{j-1}^{m_0}(00)$ has all
$j-1$ runs of ones of size $2^{m_0-(p-1)-1}$ each. The
concatenation of $c_j^{m_0}(11)$ and $c_{j-1}^{m_0}(00)$ then has
$(j-2^{p-1})\times 2=2$ runs of ones of size $2^{m_0-p-1}$, and
$2^p-j+j-1=2^p-1$ runs of ones of size $2^{m_0-p}$. Using the fact
that $2=((2j-1)-2^p)\times 2$, $2^p-1=2^{p+1}-(2j-1)$ and that
$2^p < 2j-1 <2^{p+1}$, we conclude that the resulting codeword
satisfies the proposed assertion.

Case 2: $j-1>2^{p-1}$

The codeword $c_{j-1}^{m_0}(00)$ has $((j-1)-2^{p-1})\times2$ runs
of ones of size $2^{m_0-p-1}$ and $2^p-(j-1)$ runs of ones of size
$2^{m_0-p}$. The result of the concatenation has
$(j-2^{p-1})\times 2+((j-1)-2^{p-1})\times2=((2j-1)-2^{p})\times2$
runs of ones of size $2^{m_0-p-1}$, and
$2^p-j+2^p-(j-1)=2^{p+1}-(2j-1)$ runs of ones of size $2^{m_0-p}$.
Since $2^p < 2j-1 <2^{p+1}$, the proposed assertion holds for this
choice of $j-1$ as well.



\item The concatenation of $c_j^{m_0}(01)$, if it exists, with its
complement produces a codeword in $G_{2j-1}^{m_0+1}$ (see Arrow 3
in Figure~\ref{pic:graph1}).

First note that the complement of $c_j^{m_0}(01)$ is
$c_j^{m_0}(10)$, and since they both belong to the same group
$G_j^{m_0}$, by assumption they both have $(j-2^{p-1})\times 2$
runs of ones of size $2^{m_0-p-1}$, and $2^p-j$ runs of ones of
size $2^{m_0-p}$.

As established in Lemma~\ref{LE3}, the outer runs are of the
smaller size (here $2^{m_0-p-1}$), so in the process of
concatenating $c_j^{m_0}(01)$ and $c_j^{m_0}(10)$, the rightmost
run of ones in $c_j^{m_0}(01)$ merges with the leftmost run of
ones in $c_j^{m_0}(10)$, resulting in a run of ones of size
$2^{m_0-p}$. All other runs of ones are unaltered. We will treat
the cases $j=1$ and $j>1$ separately.

If $j=1$, both $c_j^{m_0}(01)$ and $c_j^{m_0}(10)$ have one run of
ones of size $2^{m_0-1}$, so their concatenation results in a
codeword in $G_{1}^{m_0+1}$ whose sole run of ones is of size
$2^{m_0}$, which is consistent with the proposed assertion.

For $j>1$, the concatenation of $c_j^{m_0}(01)$ with its
complement has $(2j-2^{p})\times 2-2=((2j-1)-2^{p})\times 2$ runs
of ones of size $2^{(m_0+1)-(p+1)-1}$, and
$2\times(2^p-j)+1=2^{p+1}-(2j-1)$ runs of ones of size
$2^{(m_0+1)-(p+1)}$. Since $j>1$, $2^p < 2j-1 < 2^{p+1}$ holds,
and we can conclude that the codeword in $G_{2j-1}^{m_0+1}$
obtained by concatenating $c_j^{m_0}(01)$ with its complement
satisfies the proposed assertion.

\item The concatenation of $c_j^{m_0}(10)$, if it exists, with its
complement produces a codeword in $G_{2j}^{m_0+1}$ (see Arrow 5 in
Figure~\ref{pic:graph1}).

Note that both $c_j^{m_0}(01)$ and its complement $c_j^{m_0}(10)$
have $(j-2^{p-1})\times 2$ runs of ones of size $2^{m_0-p-1}$, and
$2^p-j$ runs of ones of size $2^{m_0-p}$. Consequently, the result
of the concatenation has $(j-2^{p-1})\times 2\times
2=(2j-2^p)\times 2$ runs of ones of size $2^{(m_0+1)-(p+1)-1}$,
and $(2^p-j)\times 2=2^{p+1}-2j$ runs of ones of size $2^{m_0-p}$.
Since $2^p < 2j \leq 2^{p+1}$, we can conclude that the proposed
assertion holds for a codeword in $G_{2j}^{m_0+1}$ obtained by
concatenating $c_j^{m_0}(10)$ with its complement.

\item The concatenation of $c_j^{m_0}(10)$, if it exists, with
itself produces a codeword in $G_{2j}^{m_0+1}$ (see Arrow 6 in
Figure~\ref{pic:graph1}).

Now, for $2^{p}< 2j \leq 2^{p+1}$) the resulting codeword has
$2\times (j-2^{p-1})\times 2=(2j-2^{p})\times 2$ runs of ones of
size $2^{m_0-p-1}=2^{(m_0+1)-(p+1)-1}$, and
$2\times(2^p-j)=2^{p+1}-2j$ runs of ones of size
$2^{m_0-p}=2^{(m_0+1)-(p+1)}$. No runs of ones are altered, they
are merely duplicated. This same argument applies to the
concatenation of $c_j^{m_0}(01)$ with itself  (Arrow 4 in
Figure~\ref{pic:graph1}), and to the concatenation of
$c_j^{m_0}(00)$ with itself (Arrow 7 in Figure~\ref{pic:graph1}).

\item The concatenation of $c_j^{m_0}(00)$, if it exists, with its
complement produces a codeword in $G_{2j+1}^{m_0+1}$ (see Arrow 8
in Figure~\ref{pic:graph1}). If $j=0$, $c_j^{m_0}(00)$ is the
all-zeros codeword. The concatenation with its complement (the
all-ones codeword) produces a codeword in $G_{1}^{m_0+1}$ that has
a single run of ones of size $2^{(m_0+1)-1}$.

By assumption, for $j>0$, the codeword $c_j^{m_0}(00)$ has
$(j-2^{p-1})\times 2$ runs of ones of size $2^{m_0-p-1}$, and
$2^{p}-j$ runs of ones of size $2^{m_0-p}$. The complement of
$c_j^{m_0}(00)$ is $c_{j+1}^{m_0}(11)$. We will analyze the cases
when $2^{p-1} < j < 2^{p}$ and $j=2^{p}$ separately.

Case 1: $2^{p-1} < j < 2^{p}$.

Here we have that $2^{p-1} < j+1 \leq 2^{p}$, and $2^{p} < 2j+1 <
2^{p+1}$. By assumption, $c_{j+1}^{m_0}(11)$ has
$((j+1)-2^{p-1})\times 2$ runs of ones of size $2^{m_0-p-1}$ and
$2^{p}-(j+1)$ runs of ones of size $2^{m_0-p}$. Consequently, the
concatenation has $(j-2^{p-1})\times 2 +((j+1)-2^{p-1})\times
2$=$((2j+1)-2^{p})\times 2$ runs of ones of size
$2^{m_0-p-1}=2^{(m_0+1)-(p+1)-1}$, and
$2^{p}-j+2^{p}-(j+1)=2^{p+1}-(2j+1)$ runs of ones of size
$2^{m_0-p}=2^{(m_0+1)-(p+1)}$. The assertion therefore holds for
the codeword in $G_{2j+1}^{m_0+1}$, obtained by concatenating
$c_j^{m_0}(00)$ with its complement, when $2^{p-1} < j < 2^{p}$.

Case 2: $j=2^{p}$.

Now we have that $2^{p}< j+1 \leq 2^{p+1}$ and $2^{p+1} < 2j+1 <
2^{p+2}$. In this case, $c_{j}^{m_0}(00)$ has all $j=2^p$ runs of
ones of size $2^{m_0-p-1}$. Its complement $c_{j+1}^{m_0}(11)$ has
$((j+1)-2^{p})\times 2$ runs of ones of size
$2^{m_0-(p+1)-1}=2^{m_0-p-2}$, and $2^{p+1}-(j+1)$ runs of ones of
size $2^{m_0-(p+1)}=2^{m_0-p-1}$. The result of the concatenation
has $2^p+2^{p+1}-(j+1)=2^{p+1}-1$ runs of ones of size
$2^{m_0-p-1}$, and $((j+1)-2^{p})\times 2$ runs of ones of size
$2^{m_0-p-2}$. Since $j=2^p$, we can replace $2^{p+1}-1$ with
$2^{p+2}-(2j+1)$ and $((j+1)-2^{p})\times 2$ with
$((2j+1)-2^{p+1})\times2$. Thus, for $j=2^p$, the result of the
concatenation of $c_{j}^{m_0}(00)$ with its complement is a
codeword in $G_{2j+1}^{m_0+1}$ that has $2^{p+2}-(2j+1)$ runs of
ones of size $2^{(m_0+1)-(p+2)}$, and $((2j+1)-2^{p+1})\times 2$
runs of ones of size $2^{(m_0+1)-(p+2)-1}$, where $2^{p+1} < 2j+1
< 2^{p+2}$.
\end{itemize}
Combining the results stated so far in the proof, we conclude that
Lemma~\ref{LE4} holds for $C(m_0+1)$.\hfill $\blacksquare$

For the subsequent analysis we also need to record some properties
of the runs of runs in the codewords of RM($1$, $m$).

\subsection{Properties of the run of runs of the RM($1$, $m$)
codewords}\label{sectionRM22}

\begin{definition}  \label{de11}
For a codeword $\mathbf{c} \in C(m)$ let $\mathbf{d}=d(\mathbf{c})$ be the
string whose entries are the lengths of consecutive runs in
$\mathbf{c}$, read from left to right.
Let $\mathcal{D}_m = \{\mathbf{d} | \mathbf{d}=d(\mathbf{c}),\mathbf{c} \in
C(m)\}$,
so that $\mathcal{D}_m$ represents the collection of all possible sequences of
run
lengths associated with the codewords of $C(m)$.
\hfill $\blacksquare$
\end{definition}

As an example, consider a codeword $\mathbf{c}$=`10010110', where
$\mathbf{c} \in C(3)$. Then, the associated
$\mathbf{d}=d(\mathbf{c})$ is $\mathbf{d}$=`121121'.

We now state several results about such
sequences of run lengths, which we will
prove together.

\begin{lemma}\label{le11} [\textit{mirror-symmetry}] $\forall \mathbf{c} \in C(m)$, the
string $\mathbf{d} = d(\mathbf{c})$
possesses the mirror-symmetry property, i.e.
the entry in position $p$ in $\mathbf{d}$, denoted by
$\mathbf{d}(p)$, is the same as the entry in position $l-p+1$,
denoted by $\mathbf{d}(l-p+1)$, where $l$ represents the length
of string $\mathbf{d}$.
\end{lemma}
\begin{lemma}\label{le12} If all entries in $\mathbf{d} = d(\mathbf{c})$ are either 1 or 2,
with at least one entry being 1 and one being 2, then the
following holds: \begin{enumerate} \item The leftmost entry equal
to 2 must be in position $2^p$, for some $p \geq 1$. \item Each
run of 2's in $\mathbf{d}$ is of length $2^q-1$, for some $q \geq
1$. \item Each inner run of 1's (where the inner run denotes a run
with neighboring runs on each side) in $\mathbf{d}$ is of length
$2^r-2$, for some $r \geq 1$.
\end{enumerate}
\end{lemma}
\noindent \textit{Proof:} We prove these statements by induction. We
first directly verify them for small values of $m$. The codewords in
$C(1)$ are `00',`11',`01', and `10', so
$\mathcal{D}_1=\{$`2',`11'$\}$. The truth of the statements can be
directly verified in this case. The codewords in $C(2)$ are `0000',
`1111', `1100', `0011', `0110', `1001', `1010', and `0101', so
\newline \noindent$\mathcal{D}_2=\{$`4',`22',`121',`1111'$\}$, and again the
proposed statements can be verified. Similarly, the set associated
with $C(3)$ is
\begin{eqnarray*}
\mathcal{D}_3=&\{&\text{`8',`44',`242',`2222',`12221'},\\
{}&{}&\text{`121121',`1112111',`11111111'}\}~,
\end{eqnarray*}
and the statements hold. In particular, Lemmas~\ref{le12}.1 and
~\ref{le12}.2 are applicable for the strings `12221', `121121',
and `1112111', and Lemma~\ref{le12}.3 is applicable for the string
`121121'.

Suppose now that the proposed Lemmas hold for all elements of
$\mathcal{D}_{m}$ for $1 \le m \le m_0$. For a codeword
$\mathbf{c}$ in $C(m_0)$ let $\mathbf{c'} = [\mathbf{c} |
\mathbf{c}]$ and $\mathbf{c''} = [\mathbf{c} |$$
\overline{\mathbf{c}}]$, and let $\mathbf{d}=d(\mathbf{c})$,
$\mathbf{d'}=d(\mathbf{c'})$, and $\mathbf{d''}=d(\mathbf{c''})$.

First consider the case when the outermost bits in $\mathbf{c}$
are complements of each other. Then, in constructing $\mathbf{c'}$
from $\mathbf{c}$, no runs are altered and the statements in
Lemmas ~\ref{le11} and ~\ref{le12} which by assumption hold for
$\mathbf{d}$, continue to hold for $\mathbf{d'}=[\mathbf{d}|
\mathbf{d}]$. In particular, if $\mathbf{d}$ has length $l_0$,
$\mathbf{d'}$ has length $2l_0$. The entry $\mathbf{d'}(p)$, for
$1\leq p \leq l_0$ is the same as $\mathbf{d'}(l_0-p+1)$, by
assumption, which is the same as $\mathbf{d'}(l_0-p+1+l_0)$ =
$\mathbf{d'}(2l_0-p+1)$. Thus, the mirror-symmetry property is
preserved. The leftmost entry equal to 2 in $\mathbf{d'}$, if
there is one, is in the same position as the leftmost entry equal
to 2 in $\mathbf{d}$ and Lemma~\ref{le12}.1 holds trivially. If
$\mathbf{d'}$ has only entries equal to 1 or 2, and has at least
one entry of each kind, the outermost runs in $\mathbf{c'}$ and
therefore in $\mathbf{c}$ must be 1-bit runs by Lemma~\ref{LE3}.
As an easy consequence, Lemma~\ref{le12}.2 continues to hold for
$\mathbf{c'}$. By assumption, the leftmost 2 in $\mathbf{c}$ is in
position $2^p$ for some $p$, so that the leftmost run of 1's in
$\mathbf{d}$ is of length $2^p-1$. The rightmost run of 1's in
$\mathbf{d}$ is also $2^p-1$ by the mirror symmetry assumption. At
the point of concatenation of $\mathbf{c}$ with itself, two
sequences of 1-bit runs each of length $2^p-1$ are concatenated,
and as a result, an inner run of 1's in $\mathbf{d'}$ of length
$2(2^p-1)$ = $2^{p+1}-2$ is created. All other runs in
$\mathbf{d'}$ are of the same length as the runs in $\mathbf{d}$,
and Lemma~\ref{le12}.3 follows.

We now focus on $\mathbf{c''}$ and its $\mathbf{d''}$. All runs in
$\mathbf{d''}$ remain the same as in
$\mathbf{d'}=[\mathbf{d}|\mathbf{d}]$, except that the two
innermost entries (which are the same by the mirror-symmetry
property of $\mathbf{d}$) are replaced by a single entry of their
sum. For $\mathbf{d}$ of length $l_0$, $\mathbf{d''}$ has length
$2l_0-1$. The entry $\mathbf{d''}(p)$ for $1 < p \leq l_0-1$ is
the same as $\mathbf{d''}(l_0-p+1)$, which is also the same as
$\mathbf{d''}(l_0-p+1+l_0-1)$ = $\mathbf{d''}((2l_0-1)-p+1)$. For
$p=1$, the entry in the first position in $\mathbf{d''}$ is the
same as both the first and the last entry in $\mathbf{d}$, which
is itself equal to the last entry in $\mathbf{d''}$. Therefore,
the mirror-symmetry property (Lemma ~\ref{le11}) continues to hold
for $\mathbf{d''}$.

If $\mathbf{d}$ has at least one entry equal to 2, its leftmost 2
is in the same position as the leftmost 2 in $\mathbf{d''}$, and
Lemma~\ref{le12}.1 remains to hold . If $\mathbf{d}$ has all
entries equal to 1, then the length of $\mathbf{d}$ is $2^{m_0}$
and $\mathbf{d''}$ has a single 2 in the middle position, which is
then a power of 2, and both Lemma~\ref{le12}.1 and ~\ref{le12}.2
hold.

By Lemma~\ref{LE3}, if $\mathbf{c}$ has both 1-bit and 2-bit runs,
the outermost runs must be 1-bit runs. If the outermost 1-bit runs
in $\mathbf{c}$ are neighbored by another 1-bit runs, the
innermost run of 2's in $\mathbf{d''}$ is then of length 1. If the
outermost 1-bit runs in $\mathbf{c'}$ are neighbored by a sequence
of consecutive 2-bit runs, which each by assumption and the
symmetry property of $\mathbf{c}$ must contain $2^{q_0}-1$
consecutive 2-bit runs, then the innermost run of 2's (at the
point of concatenation in $\mathbf{c''}$) in $\mathbf{d''}$ is of
length $2(2^{q_0}-1)+1=2^{q_0+1}-1$. Since all other runs in
$\mathbf{c''}$ remain unaltered we can conclude that
Lemma~\ref{le12}.2 holds as well. Finally, Lemma~\ref{le12}.3
continues to hold trivially since all inner runs of 1's in
$\mathbf{d''}$ already existed as inner runs of 1's in two copies
of $\mathbf{d}$.

If the outermost bits in $\mathbf{c}$ are the same, we can mimic
the above proof by simply exchanging $\mathbf{c'}$ and
$\mathbf{c''}$. As discussed before, since each codeword in
$C(m_0+1)$ is either a concatenation of a codeword in $C(m_0)$
with itself or with its complement, we can conclude that
Lemmas~\ref{le11} and~\ref{le12} continue to hold for
$C(m_0+1)$.\hfill$\blacksquare$

Another useful observation is given in the following:
\begin{lemma}\label{le14} If $\mathbf{d_a}=d(\mathbf{c_a})$ and $\mathbf{d_b}=d(\mathbf{c_b})$,
for $\mathbf{c_a}$, $\mathbf{c_b}$ $\in$ $C(m)$ ($\mathbf{d_a}$,
$\mathbf{d_b}$ $\in$ $\mathcal{D}_m$) and $m>2$, are such that
they have $2k+1$ and $2k$ entries respectively, and all their
entries are 1 or 2, then in the first leftmost position in which
they differ, call it $p$, the entry is 1 in $\mathbf{d_a}$ and is
2 in $\mathbf{d_b}$, and $p<k$.
\end{lemma}

\noindent \textit{Proof:} Let $s$ be the largest power of 2 that
divides $2k$. By assumption $s \geq 1$. By Lemma ~\ref{LE2}, there
exists a codeword in $C(m-s)$, call it $\mathbf{c_b^{*}}$, that
has $r_1=2k/2^s$ runs and has the same leftmost bit as
$\mathbf{c_b}$. In particular, if $2k$ is itself a power of 2,
$\mathbf{c_b^{*}}$ has a single run of length $2^m/{2k}$. By the
existence of $\mathbf{c_a}$ in $C(m)$ with $2k+1$ runs, $2k$ is
strictly less than $2^m$, and thus $m-s \geq 1$. Consider a
codeword in $C(m-s)$ that has $r_1+1$ runs, and the same leftmost
bit as $\mathbf{c_a}$, and call it $\mathbf{c_a^{*}}$. Since $r_1$
is odd, $r_1+1 \leq 2^{m-s}$ and $\mathbf{c_a^{*}}$ exists by
Lemma~\ref{LE2}.

Let $\mathbf{c_e}$ be a codeword in $C(m-s-1)$ that has
$(r_1+1)/2$ runs and the same leftmost bit as $\mathbf{c_a^{}}$
(since $m-s \geq 1$, the code $C(m-s-1)$ and its codeword
$\mathbf{c_e}$ exist). If $\mathbf{c_e}$ starts and ends in the
same bit, which corresponds to odd $(r_1+1)/2$, we consider the
codewords $\mathbf{c_e'}$ =
$[\mathbf{c_e}|\overline{\mathbf{c_e}}]$ and $\mathbf{c_e''}$ =
$[\mathbf{c_e}|\mathbf{c_e}]$ in $C(m-s)$, and associate
$\mathbf{d_e'}=d(\mathbf{c_e'})$ and
$\mathbf{d_e''}=d(\mathbf{c_e''})$ to them. Note that
$|\mathbf{d_e'}|$ = $|\mathbf{d_e''}|+1$, where $|\mathbf{d_e'}|$
indicates the length of string $\mathbf{d_e'}$. Moreover, the
middle entry (in position $(r_1+1)/2$) in $\mathbf{d_e''}$ is the
sum of two innermost entries in $\mathbf{d_e'}$ (which span
positions $(r_1+1)/2$ and $(r_1+1)/2+1$, and are equal to each
other by Lemma ~\ref{le11}), and all other entries in these two
strings are the same.

If $\mathbf{c_e}$ starts and ends in complementary bits, which
happens for even $(r_1+1)/2$, instead let $\mathbf{c_e'}$ =
$[\mathbf{c_e}|\mathbf{c_e}]$ and $\mathbf{c_e''}$ =
$[\mathbf{c_e}|\overline{\mathbf{c_e}}]$, and associate
$\mathbf{d_e'}=d(\mathbf{c_e'})$ and
$\mathbf{d_e''}=d(\mathbf{c_e''})$ with them. Observe that
$|\mathbf{d_e'}|$ = $|\mathbf{d_e''}|+1$ as well as that
$\mathbf{d_e''}$ is the same as $\mathbf{d_e'}$ except for the two
innermost entries in $\mathbf{d_e'}$, which are replaced by their
sum to yield the middle entry of $\mathbf{d_e''}$. By the
uniqueness of a codeword in $C(m-s)$ having $|\mathbf{d_e'}|$ runs
and starting with a particular bit (that being the leftmost bit of
$\mathbf{c_a}$), established in Lemma~\ref{LE2}, we conclude that
$\mathbf{c_a^{*}}$ = $\mathbf{c_e'}$, and similarly
$\mathbf{c_b^{*}}$ = $\mathbf{c_e''}$.


Therefore, the first leftmost position in which
$\mathbf{d_b^{*}}=d(\mathbf{c_b^{*}})$ (same as $\mathbf{d_e''}$)
and $\mathbf{d_a^{*}}=d(\mathbf{c_a^{*}})$ (same as
$\mathbf{d_e'}$) differ is their $(r_1+1)/2^{\text{th}}$ position,
such that the entry in that position in $\mathbf{d_b^{*}}$ is
twice its counterpart in $\mathbf{d_a^{*}}$. By assumption on the
entries of $\mathbf{d_a}$ and $\mathbf{d_b}$ being at most 2, it
further follows that the entry is 1 in $\mathbf{d_a^{*}}$ and 2 in
$\mathbf{d_b^{*}}$.

By constructing a sequence of codewords
$\left\{\mathbf{c_{b,i}}\right\}$, for $1 \leq i \leq s+1$,
starting from $\mathbf{c_{b,1}}$ = $\mathbf{c_b^{*}}$, and where
$\mathbf{c_{b,i}} \in C(m-s-1+i)$ is the result of concatenation
of $\mathbf{c_{b,i-1}}$ either with itself or with its complement
(former if the outermost bits in $\mathbf{c_{b,i-1}}$ are
different and latter if they are the same), we arrive at
$\mathbf{c_b}$. In particular, the associated
$\mathbf{d_{b,i}}=d(\mathbf{c_{b,i}})$ have length $2^{i-1}r_1$,
and for the last term in the sequence $\mathbf{d_{b,s+1}}$ is of
length $2^s r_1=2k$, which is precisely the length of
$d(\mathbf{c_{b}})$.

Similarly, we construct a sequence of codewords
$\left\{\mathbf{c_{a,i}}\right\}$, for $1 \leq i \leq s+1$,
starting from $\mathbf{c_{a,1}}$ = $\mathbf{c_a^{*}}$. Now
$\mathbf{c_{a,i}} \in C(m-s-1+i)$ is the result of concatenation
of $\mathbf{c_{a,i-1}}$ with itself if the outermost bits in
$\mathbf{c_{a,i-1}}$ are the same, otherwise it is  the result of
concatenation of $\mathbf{c_{a,i-1}}$ with its complement. The
associated $\mathbf{d_{a,i}}=d(\mathbf{c_{a,i}})$ have length
$2^{i-1}r_1+1$, so that the last term in the sequence has
$2^sr_1+1=2k+1$ runs, which is precisely the length of
$\mathbf{d_a}=d(\mathbf{c_a})$. Thus, in starting from
$\mathbf{c_a^{*}}$, by a series of concatenations in which the
runs at the point of concatenation are always merged, we arrive at
$\mathbf{c_a}$. Since the first leftmost entry in which
$\mathbf{d_b^{*}}$ and $\mathbf{d_a^{*}}$ differ are in their
$(r_1+1)/2^{\text{th}}$ leftmost positions, the first position in
which $\mathbf{d_b}$ and $\mathbf{d_a}$ differ are still in their
$(r_1+1)/2^{\text{th}}$ leftmost positions. Since $s$ is at least
1, $(r_1+1)/2 \leq (k+1)/2 < k$, for $k>1$. If $k=1$,
$\mathbf{d_a}$ is `$2^{m-1}2^{m-1}$', and $\mathbf{d_b}$ is
`$2^{m-2}2^{m-1}2^{m-2}$'. For $m>2$, $2^{m-2}>1$, which exceeds
the requirement on the entries of $\mathbf{d_b}$ being at most 2.
\hfill$\blacksquare$

It is sometimes useful to determine the number of runs of a
particular codeword based on its input message and vice versa. In
the final subsection of this chapter we provide an explicit
relationship between these two quantities.
\subsection{Relationship between the input message and the run-lengths of its
codeword}\label{sectionRM23}

\comment{Let $\mathbf{a_m}=(a_0,a_m,a_{m-1},...,a_2,a_1)$ be a
binary string of length $m+1$ and let $\mathbf{c}$ be a codeword in
$C(m)$ such that $\mathbf{c}=\mathbf{a_mG_m}$. The bit $a_0$
multiplies the all-ones row of $\mathbf{G_m}$ and therefore does not
affect the number of runs of the resulting codeword, i.e.
$\mathbf{a_m}=(a_0,a_m,a_{m-1},...,a_2,a_1)$ and
$\mathbf{a_m}'=(\overline{a_0},a_m,a_{m-1},...,a_2,a_1)$ result in
complement codewords (with the same number of runs). In the
following we replace $a_0$ by $x$ to indicate that the value of
$a_0$ does not matter.

We denote by $R_m(a_0,a_1,...,a_{m-1},a_m)$ the total number of
runs in $\mathbf{c}$. The following result provides a closed-form
expression for $R_m(a_0,a_1,...,a_{m-1},a_m)$ in terms of
$\mathbf{a_m}$.

\begin{lemma} The number of runs in the codeword $\mathbf{c}$
given by $\mathbf{c}=\mathbf{a_mG_m}$ where $\mathbf{a_m}$ =
$(a_0,a_m,a_{m-1},...,a_2,a_1)$ is
$R_m(a_0,a_1,...,a_{m-1},a_m)=2^{m-1}a_1+2^{m-2}+1/2-\sum_{k=2}^m
2^{m-k-1}(-1)^{\sum_{i=1}^ka_i}$.
\end{lemma}
\noindent \textit{Proof:} By construction the bottom $m-1$ rows in
$\mathbf{G_m}$ when viewed as a $m-1$ by $2^m$ matrix, are the
same as the matrix obtained by concatenating the matrix consisting
of the bottom $m-1$ rows in $\mathbf{G_{m-1}}$ with itself. If the
runs at the point of concatenation are the same, the concatenation
results in the merging of two runs, otherwise no runs are altered.

Therefore, the linear combination of the bottom $m-1$ rows in
$\mathbf{G_m}$ produces a codeword in $C(m)$ which has either $2R$
or $2R-1$ runs, where $R$ denotes the number of runs of the
codeword produced by the same linear combination of rows in
$\mathbf{G_{m-1}}$. In particular, the number of runs is $2R$ if
the auxiliary codeword in $C(m-1)$ (the one constructed from the
same linear combination) had different outermost bits, and the
number of runs is $2R-1$ if the outermost bits are the same. The
former (latter) case occurs when the linear combination consists
of an odd (even) number of participating rows.


Then, when $a_m=0$ we have the following:
\[ R_m(x,a_1,a_2,...,a_{m-1},0)=\left\{
\begin{array}{ll}
    2R_{m-1}(x,a_1,a_2,...,a_{m-1}), & \text{if $\sum_{i=1}^{m-1} a_i$ mod $2 \equiv 1$,}\\
    2R_{m-1}(x,a_1,a_2,...,a_{m-1})-1, & \text{if $\sum_{i=1}^{m-1} a_i$ mod $2 \equiv 0$}\\
\end{array}
\right. \]

Now, $a_m=1$ has the effect of complementing the left half of the
codeword obtained from a linear combination of rows of
$\mathbf{G_m}$ that does not involve second row of $\mathbf{G_m}$,
and leaving the right half intact.

Therefore,
\[ R_m(x,a_1,a_2,...,a_{m-1},1)=\left\{
\begin{array}{ll}
    2R_{m-1}(x,a_1,a_2,...,a_{m-1}), & \text{if $\sum_{i=1}^{m-1} a_i$ mod $2 \equiv 0$,}\\
    2R_{m-1}(x,a_1,a_2,...,a_{m-1})-1, & \text{if $\sum_{i=1}^{m-1} a_i$ mod $2 \equiv 1$}\\
\end{array}
\right. \]

We can jointly write these two expressions as

$R_m(x,a_1,a_2,...,a_{m-1},a_m)=2R_{m-1}(x,a_1,a_2,...,a_{m-1})-1/2(-1)^{\sum_{i=1}^m
a_i}-1/2$.


To obtain the formula for $R_m(x,a_1,...,a_{m-1},a_m)$, we expand as
follows,
\begin{eqnarray*}
\lefteqn{R_m(x,a_1,...,a_m)}  \\
& & =  2R_{m-1}(x,a_1,a_2,...,a_{m-1})-1/2(-1)^{\sum_{i=1}^ma_i}-1/2\\
& & =  2\left[2R_{m-2}(x,a_1,a_2,...,a_m)-1/2(-1)^{\sum_{i=1}^{m-1}a_i}-1/2\right]-1/2(-1)^{\sum_{i=1}^ma_i}-1/2\\
              &  & =  4R_{m-2}(x,a_1,a_2,...,a_{m-2})-(-1)^{\sum_{i=1}^m a_i}-1-1/2(-1)^{\sum_{i=1}^ma_i}-1/2\\
                       &  & =  4\left[2R_{m-3}(x,a_1,a_2,...,a_{m-3})-1/2(-1)^{\sum_{i=1}^{m-2} a_i}-1/2\right]-(-1)^{\sum_{i=1}^m a_i}-1-1/2(-1)^{\sum_{i=1}^ma_i}-1/2\\
                       &  & =  8R_{m-3}(x,a_1,a_2,...,a_{m-3})-2(-1)^{\sum_{i=1}^{m-2}
                       a_i}-2-(-1)^{\sum_{i=1}^m
                       a_i}-1-1/2(-1)^{\sum_{i=1}^ma_i}-1/2\\
                       &  & \vdots\\
                       &  & =  2^{m-2}R_2(x,a_1,a_2)-2^{m-3-1}(-1)^{\sum_{i=1}^3 a_i}-2^{m-3-1}-2^{m-4-1}(-1)^{\sum_{i=1}^4 a_i}-2^{m-4-1}-...\\
                       &  &  \hspace{0.2in}-2^{m-(m-1)-1}(-1)^{\sum_{i=1}^{m-1} a_i}-2^{m-(m-1)-1}-2^{m-m-1}(-1)^{\sum_{i=1}^m a_i}-2^{m-m-1}\\
                       &  & =  2^{m-1}R_1(x,a_1)-2^{m-2}1/2(-1)^{\sum_{i=1}^2 a_i}-2^{m-2}1/2-2^{m-4}(-1)^{\sum_{i=1}^3 a_i}-2^{m-4}-...\\
                       &  &  \hspace{0.2in}-2^0(-1)^{\sum_{i=1}^{m-1} a_i}-2^0-2^{-1}(-1)^{\sum_{i=1}^m a_i}-2^{-1}\\
                       &  & = 2^{m-1}(1+a_1)-\\
                       &  & \left[2^{m-3}(-1)^{\sum_{i=1}^2 a_i}+2^{m-4}(-1)^{\sum_{i=1}^3 a_i}+...+2^{-1}(-1)^{\sum{i=1}^m a_i}+2^{m-3}+2^{m-4}+...+1+1/2 \right]\\
                       &  & = 2^{m-1}a_1-\sum_{k=2}^m 2^{m-k-1}(-1)^{\sum_{i=1}^k
                       a_i}+2^{m-1}-\left[2^{m-2}-1+1/2\right]\\
                       &  & =
                       2^{m-1}a_1+2^{m-2}+1/2-\sum_{k=2}^m2^{m-k-1}(-1)^{\sum_{i=1}^ka_i},
\end{eqnarray*}
which completes the proof. \hfill $\blacksquare$

It is also useful to know how to quickly determine the input message
based on the number of runs in the codeword it generates. Let
$N_{1,m}$ be the integer denoting the number of runs of a codeword
in $C(m)$, and let $\mathbf{a_m}(N_{1,m})=(a_0,a_m,...,a_{2},a_1)$
be the input message whose codeword has $N_{1,m}$ runs.%, so that the
%mapping $S_m$ is from $\mathbb{N}^{+}$ to $\{0,1\}^{m+1}$. %Let
%$T_m=\sum_{k=2}^m 2^{m-k-1}(-1)^{\sum_{i=2}^ka_i}$ so that
%$R_m(x,a_1,...,a_{m-1},a_m)=2^{m-1}a_1+2^{m-2}+1/2-(-1)^{a_1}T_m$.

First observe that $|\sum_{k=2}^m
2^{m-k-1}(-1)^{\sum_{i=1}^ka_i}|\leq 2^{m-2}-1/2$. Thus, for
$a_1=1$, $R_m(x,1,...,a_{m-1},a_m)$ is in the interval $[2^{m-1}+1,
2^m]$ and for $a_1=0$, $R_m(x,0,...,a_{m-1},a_m)$ is in the interval
$[1,2^{m-1}]$. Thus, for the given $m$, if $N_{1,m} \geq 2^{m-1}+1$,
$a_1$ must be 1, otherwise it must be zero. Moreover, note that
$R_m(x,1,...,a_{m-1},a_m)$ + $R_m(x,0,...,a_{m-1},a_m)$ evaluates to
$2^m+1$, since
\begin{equation*}\begin{array}{lll}
\left(2^{m-1}+2^{m-2}+\frac{1}{2}-\sum_{k=2}^m2^{m-k-1}(-1)^{1+\sum_{i=2}^k
a_i}\right)+\left(2^{m-2}+\frac{1}{2}-\sum_{k=2}^m2^{m-k-1}(-1)^{\sum_{i=2}^k
a_i}\right)\\= 2^{m-1}+2^{m-1}+1-\sum_{k=2}^m2^{m-k-1}
\left((-1)^{1+\sum_{i=2}^k a_i}+ (-1)^{\sum_{i=2}^k a_i}\right)\\
=2^m+1+0.
\end{array}\end{equation*}

To evaluate the remaining $a_2$ through $a_m$, we determine the
contribution of $a_2$ through $a_m$ to $N_{1,m}$ . This contribution
$N_{2,m}$ is $N_{1,m}$ for $a_1=0$ and is $2^{m}+1-N_{1,m}$ for
$a_1=1$.

Having determined $a_1$, observe that $R_m(x,0,a_2,...,a_{m-1},a_m)$
= $R_{m-1}(x,a_2,...,a_{m-1},a_m)$, since the $i^{th}$ row of
$\mathbf{G_m}$ for $1 \leq i \leq m$ is constructed from the
$i^{th}$ row of $\mathbf{G_{m-1}}$ by repeating each entry twice.
Thus, a codeword constructed from the linear combination of a subset
of these particular rows of $\mathbf{G_m}$ has the same number of
runs as the codeword in $C(m-1)$ constructed from the counterpart
rows of $\mathbf{G_{m-1}}$.

We now view $a_2$ as the value that multiplies the last row of
$\mathbf{G_{m-1}}$, just like $a_1$ did for $\mathbf{G_{m}}$. By
using the same line of arguments as for $a_1$, conclude that if
$N_{2,m} \geq 2^{(m-1)-1}+1$, $a_2$ is 1, otherwise it is 0. The
contribution $N_{3,m}$ of $a_3$ through $a_m$ is $N_{2,m}$ if
$a_2=0$ and is $2^{m-1}+1-N_{2,m}$ for $a_2=1$. Compare $N_{3,m}$ to
$2^{(m-2)-1}+1$, and if below, set $a_3=0$, else $a_3=1$. Repeat
evaluating $N_{i,m}$ and $a_i$ until $a_m$ is determined.

Recall that input messages $(1,a_m,...,a_2,a_1)$ and
$(0,a_m,...,a_2,a_1)$ result in complement codewords which thus have
the same number of runs.

 The steps for determining the input message $\mathbf{a_m}(N_m)=(x,a_m,...a_2,a_1)$ for the given integer $N_m$ can be
outlined as follows:


\begin{enumerate}
\item Set $i=1$.
\item Set $a_i=1(N_{i,m} \geq 2^{m-i}+1)$.
\item Set $N_{i+1,m}=(2^{m-i+1}+1-N_i)1(a_i=1)+N_i1(a_i=0)$.
\item If $i=m$ return strings $(1,a_m,...,a_2,a_1)$ and $(0,a_m,...,a_2,a_1)$, else go back to
Step 2 with $i \rightarrow i+1$.
\end{enumerate}
} \comment{Example: $m=4$, $N_m=10$.
\begin{itemize}
\item Step 1: Initialize $(a_1,a_2,a_3,a_4)=(0,0,0,0)$, $N_c=10$,
$l=0$ \item Step 2.a: Since $8 < N_c < 16$ $\Rightarrow$ $p=3$
\item Step 3.a: Set $i=1$, $a_1=1$ \item Step 4.a: Set $N_c=7$,
$l=1$ \item Step 2.b: Since $4 < N_c < 8$ $\Rightarrow$ $p=2$
\item Step 3.b: Set $i=2$, $a_2=1$ \item Step 4.b: Set $N_c=2$,
$l=2$ \item Step 2.c: Since $1 < N_c \leq 2$ $\Rightarrow$
$p=0$\item Step 3.c: Set $i=4$, $a_4=1$ \item Step 4.c: Set
$N_c=1$, $l=4$ \item Step 2.d. No $p$ exists, return
$(a_1,a_2,a_3,a_4)=(1,1,0,1)$
\end{itemize}

It can be easily checked that the messages $[0,1,0,1,1]$ and
$[1,1,0,1,1]$ both result in codewords with $10$ runs each. }

%\subsection{}

%%%% new proof from rmsup2.tex
Let $\mathbf{a_m}=(a_0,a_m,a_{m-1},...,a_2,a_1)$ be a binary string
of length $m+1$ and let $\mathbf{c}$ be a codeword in $C(m)$ such
that $\mathbf{c}=\mathbf{a_mG_m}$. The bit $a_0$ multiplies the
all-ones row of $\mathbf{G_m}$ and therefore does not affect the
number of runs of the resulting codeword, i.e.
$\mathbf{a_m}=(a_0,a_m,a_{m-1},...,a_2,a_1)$ and
$\mathbf{a_m}'=(\overline{a_0},a_m,a_{m-1},...,a_2,a_1)$ result in
complement codewords (with the same number of runs). In the
following we replace $a_0$ by $x$ to indicate that the value of
$a_0$ does not matter.

We denote by $R_m(a_0,a_1,...,a_{m-1},a_m)$ the total number of runs
in $\mathbf{c}$. The following result provides a closed-form
expression for $R_m(a_0,a_1,...,a_{m-1},a_m)$ in terms of
$\mathbf{a_m}$.

\begin{lemma} The number of runs in the codeword $\mathbf{c}$
given by $\mathbf{c}=\mathbf{a_mG_m}$ where $\mathbf{a_m}$ =
$(a_0,a_m,a_{m-1},...,a_2,a_1)$ is
$R_m(a_0,a_1,...,a_{m-1},a_m)=2^{m-1}a_1+2^{m-2}+1/2-\sum_{k=2}^m
2^{m-k-1}(-1)^{\sum_{i=1}^ka_i}$.
\end{lemma}
\noindent \textit{Proof:} In proving this result we adopt the
following viewpoint. Consider the set of $m$ combs along the
sequence of $2^m$ bits, which itself corresponds to a codeword in
$C(m)$. Here the $i$th comb, $1 \leq i \leq m$, corresponds to $a_i$
in the input message, and has teeth exactly where the row of
$\mathbf{G_m}$ that multiplies $a_i$ has a change of runs. In
particular, the last, $m$th, comb has a single tooth that is
positioned right between the left and the right half of this $2^m$
sequence. The penultimate comb has three teeth, immediately
following the $2^{m-2}$th, $2^{m-1}$th and $3\times 2^{m-2}$th bit
in the sequence, and so on. The $i$th comb, for $1 \leq i \leq m$,
has $2^{m-i+1}-1$ teeth, each positioned immediately after the
$k\times 2^{i-1}$th bit, for $1 \leq k \leq 2^{m-i+1}-1$. To
determine the total number of runs in the resulting codeword we look
at the total parity of teeth of those combs whose $a_i$'s are 1, in
all possible teeth locations. In particular, odd parity indicates a
change of run while the even parity indicates no change of run. The
total number of runs is then 1 plus the number of places where the
parity of the teeth of the selected combs is odd. This can be
written as
\begin{equation}\label{rmsup1}\begin{array}{lll}R_m(a_0,a_1,...,a_{m-1},a_m)&=&1+2^{m-1}\times1(a_1 \text{ is odd })+2^{m-2}\times1(a_1+a_2 \text{ is odd })+\\
2^{m-i}\times 1(a_1+\dots +a_i \text{ is odd
})&+&\dots+2^{m-m}\times1(a_1+\dots +a_m \text{ is odd })~.
 \end{array}\end{equation}
Rewrite \eqref{rmsup1} as
\begin{equation}\label{rmsup2}\begin{array}{lll}R_m(a_0,a_1,...,a_{m-1},a_m)=1+2^{m-1}\times1(a_1 \text{ is odd })+\\
2^{m-3}+2^{m-3}\times1(a_1+a_2 \text{ is odd })-2^{m-3}+\times1(a_1+a_2 \text{ is even })+\\
{} \vdots\\
2^{m-i-1}+2^{m-i-1}\times1(a_1+\dots+a_i \text{ is odd })-2^{m-i-1}+\times1(a_1+\dots+a_i \text{ is even })+\\
{}\vdots\\
\frac{1}{2}+ \frac{1}{2}\times1(a_1+\dots a_m \text{ is odd
})-\frac{1}{2}\times1(a_1+\dots a_m \text{ is even })~.
 \end{array}\end{equation}
Collecting the free terms and reexpressing the indicators in terms
of powers of $(-1)$ in \eqref{rmsup2}, it follows that
\begin{equation}\label{rmsup3}\begin{array}{lll}
R_m(a_0,a_1,...,a_{m-1},a_m)&=&1+2^{m-1}a_1+(\frac{1}{2}+1+2+\dots+2^{m-3})-\sum_{k=2}^m
2^{m-k-1}(-1)^{\sum_{i=1}^k a_i}\\
{}&=&2^{m-1}a_1+ \frac{1}{2}+2^{m-2}-\sum_{k=2}^m
2^{m-k-1}(-1)^{\sum_{i=1}^k a_i},
\end{array}\end{equation}
which completes the proof.
 \hfill
$\blacksquare$

It is also useful to know how to quickly determine the input message
based on the number of runs in the codeword it generates. Let
$N_{1,m}$ be the integer denoting the number of runs of a codeword
in $C(m)$, and let $\mathbf{a_m}(N_{1,m})=(a_0,a_m,...,a_{2},a_1)$
be the input message whose codeword has $N_{1,m}$ runs.%, so that the
%mapping $S_m$ is from $\mathbb{N}^{+}$ to $\{0,1\}^{m+1}$. %Let
%$T_m=\sum_{k=2}^m 2^{m-k-1}(-1)^{\sum_{i=2}^ka_i}$ so that
%$R_m(x,a_1,...,a_{m-1},a_m)=2^{m-1}a_1+2^{m-2}+1/2-(-1)^{a_1}T_m$.

First observe from \eqref{rmsup1} that for $a_1=1$,
$R_m(x,1,...,a_{m-1},a_m)$ is in the interval $[2^{m-1}+1, 2^m]$ and
for $a_1=0$, $R_m(x,0,...,a_{m-1},a_m)$ is in the interval
$[1,2^{m-1}]$. Thus, for the given $m$, if $N_{1,m} \geq 2^{m-1}+1$,
$a_1$ must be 1, otherwise it must be zero. By substituting $a_1=0$
and $a_1=1$ in \eqref{rmsup1} it follows immediately that
\[R_m(x,1,...,a_{m-1},a_m) + R_m(x,0,...,a_{m-1},a_m)=2^m+1~.\]
To evaluate the remaining $a_2$ through $a_m$, we determine the
contribution of $a_2$ through $a_m$ to $N_{1,m}$. This contribution
$N_{2,m}$ is $N_{1,m}$ for $a_1=0$ and is $2^{m}+1-N_{1,m}$ for
$a_1=1$. Having determined $a_1$, observe that
$R_m(x,0,a_2,...,a_{m-1},a_m)$ = $R_{m-1}(x,a_2,...,a_{m-1},a_m)$,
since the $i^{th}$ row of $\mathbf{G_m}$ for $1 \leq i \leq m$ is
constructed from the $i^{th}$ row of $\mathbf{G_{m-1}}$ by repeating
each entry twice. Thus, a codeword constructed from the linear
combination of a subset of these particular rows of $\mathbf{G_m}$
has the same number of runs as the codeword in $C(m-1)$ constructed
from the counterpart rows of $\mathbf{G_{m-1}}$.

We now view $a_2$ as the value that multiplies the last row of
$\mathbf{G_{m-1}}$, just like $a_1$ did for $\mathbf{G_{m}}$. By
using the same line of arguments as for $a_1$, conclude that if
$N_{2,m} \geq 2^{(m-1)-1}+1$, $a_2$ is 1, otherwise it is 0. The
contribution $N_{3,m}$ of $a_3$ through $a_m$ is $N_{2,m}$ if
$a_2=0$ and is $2^{m-1}+1-N_{2,m}$ for $a_2=1$. Compare $N_{3,m}$ to
$2^{(m-2)-1}+1$, and if below, set $a_3=0$, else $a_3=1$. Repeat
evaluating $N_{i,m}$ and $a_i$ until $a_m$ is determined.

Recall that input messages $(1,a_m,...,a_2,a_1)$ and
$(0,a_m,...,a_2,a_1)$ result in complement codewords which thus have
the same number of runs.

 The steps for determining the input message $\mathbf{a_m}(N_{1,m})=(x,a_m,...a_2,a_1)$ for the given integer $N_{1,m}$ can be
outlined as follows:


\begin{enumerate}
\item Set $i=1$.
\item Set $a_i=1(N_{i,m} \geq 2^{m-i}+1)$.
\item Set $N_{i+1,m}=(2^{m-i+1}+1-N_{i,m})1(a_i=1)+N_{i,m}1(a_i=0)$.
\item If $i=m$ return strings $(1,a_m,...,a_2,a_1)$ and $(0,a_m,...,a_2,a_1)$, else go back to
Step 2 with $i \rightarrow i+1$.
\end{enumerate}

\section{Summary and Concluding Remarks}\label{sectionRMconc}

Motivated by the model presented in the previous Chapter, in this
Chapter we developed several structural properties of the
RM($1$,$m$) codes. These structural properties concerning
runlength distribution, properties of these runs and the
connection between the input message and the runs of its codeword
may be of interest in their own right. In the next Chapter we will
exploit the properties established here in  discussing the
performance of the RM($1$,$m$) codes under substitution and
synchronization errors.
