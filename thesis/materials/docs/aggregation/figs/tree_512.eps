%!PS-Adobe-2.0 EPSF-2.0
%%Title: tree_512.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Mon Aug  2 21:53:32 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
574 420 M
63 0 V
6325 0 R
-63 0 V
490 420 M
( 0) Rshow
1.000 UL
LTb
574 820 M
63 0 V
6325 0 R
-63 0 V
490 820 M
( 0.1) Rshow
1.000 UL
LTb
574 1220 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.2) Rshow
1.000 UL
LTb
574 1620 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.3) Rshow
1.000 UL
LTb
574 2020 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.4) Rshow
1.000 UL
LTb
574 2420 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.5) Rshow
1.000 UL
LTb
574 2820 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.6) Rshow
1.000 UL
LTb
574 3220 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.7) Rshow
1.000 UL
LTb
574 3620 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.8) Rshow
1.000 UL
LTb
574 4020 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0.9) Rshow
1.000 UL
LTb
574 4420 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 1) Rshow
1.000 UL
LTb
893 420 M
0 63 V
0 4137 R
0 -63 V
893 280 M
( 0) Cshow
1.000 UL
LTb
1532 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1) Cshow
1.000 UL
LTb
2171 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2) Cshow
1.000 UL
LTb
2810 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3) Cshow
1.000 UL
LTb
3449 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 4) Cshow
1.000 UL
LTb
4087 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 5) Cshow
1.000 UL
LTb
4726 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 6) Cshow
1.000 UL
LTb
5365 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 7) Cshow
1.000 UL
LTb
6004 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 8) Cshow
1.000 UL
LTb
6643 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 9) Cshow
1.000 UL
LTb
1.000 UL
LTb
574 420 M
6388 0 V
0 4200 V
-6388 0 V
574 420 L
LTb
3768 70 M
(Tree level) Cshow
LTb
3768 4830 M
(Probability of Not Receiving a Value. Tree \(512 leaves\).) Cshow
1.000 UP
1.000 UL
LT0
LTb
994 1813 M
(c=1) Rshow
LT0
1078 1813 M
399 0 V
574 420 M
0 3993 V
639 0 V
0 -6 V
639 0 V
0 -10 V
638 0 V
0 -18 V
639 0 V
0 -33 V
639 0 V
0 -59 V
639 0 V
0 -106 V
639 0 V
0 -191 V
638 0 V
0 -345 V
639 0 V
0 -620 V
639 0 V
0 -2605 V
1.000 UL
LT1
LTb
994 1673 M
(c=2) Rshow
LT1
1078 1673 M
399 0 V
574 420 M
0 3986 V
639 0 V
0 -11 V
639 0 V
0 -20 V
638 0 V
0 -36 V
639 0 V
0 -65 V
639 0 V
0 -114 V
639 0 V
0 -200 V
639 0 V
0 -343 V
638 0 V
0 -559 V
639 0 V
0 -820 V
639 0 V
0 -1818 V
1.000 UL
LT2
LTb
994 1533 M
(c=3) Rshow
LT2
1078 1533 M
399 0 V
574 420 M
0 3979 V
639 0 V
0 -17 V
639 0 V
0 -30 V
638 0 V
0 -53 V
639 0 V
0 -95 V
639 0 V
0 -166 V
639 0 V
0 -283 V
639 0 V
0 -461 V
638 0 V
0 -685 V
639 0 V
0 -834 V
639 0 V
0 -1355 V
1.000 UL
LT3
LTb
994 1393 M
(c=4) Rshow
LT3
1078 1393 M
399 0 V
574 420 M
0 3972 V
639 0 V
0 -22 V
639 0 V
0 -40 V
638 0 V
0 -71 V
639 0 V
0 -124 V
639 0 V
0 -214 V
639 0 V
0 -356 V
639 0 V
0 -552 V
638 0 V
0 -749 V
639 0 V
0 -772 V
639 0 V
0 -1072 V
1.000 UL
LT4
LTb
994 1253 M
(c=5) Rshow
LT4
1078 1253 M
399 0 V
574 420 M
0 3965 V
639 0 V
0 -28 V
639 0 V
0 -49 V
638 0 V
0 -88 V
639 0 V
0 -153 V
639 0 V
0 -259 V
639 0 V
0 -419 V
639 0 V
0 -620 V
638 0 V
0 -772 V
639 0 V
0 -686 V
639 0 V
0 -891 V
1.000 UL
LT5
LTb
994 1113 M
(c=6) Rshow
LT5
1078 1113 M
399 0 V
574 420 M
0 3958 V
639 0 V
0 -33 V
639 0 V
0 -59 V
638 0 V
0 -104 V
639 0 V
0 -180 V
639 0 V
0 -302 V
639 0 V
0 -474 V
639 0 V
0 -670 V
638 0 V
0 -768 V
639 0 V
0 -595 V
639 0 V
0 -773 V
1.000 UL
LT6
LTb
994 973 M
(c=7) Rshow
LT6
1078 973 M
399 0 V
574 420 M
0 3951 V
639 0 V
0 -39 V
639 0 V
0 -68 V
638 0 V
0 -120 V
639 0 V
0 -207 V
639 0 V
0 -340 V
639 0 V
0 -523 V
639 0 V
0 -704 V
638 0 V
0 -746 V
639 0 V
0 -512 V
639 0 V
0 -692 V
1.000 UL
LT7
LTb
994 833 M
(c=8) Rshow
LT7
1078 833 M
399 0 V
574 420 M
0 3944 V
639 0 V
0 -44 V
639 0 V
0 -78 V
638 0 V
0 -136 V
639 0 V
0 -232 V
639 0 V
0 -376 V
639 0 V
0 -564 V
639 0 V
0 -727 V
638 0 V
0 -713 V
639 0 V
0 -439 V
639 0 V
0 -635 V
1.000 UL
LT8
LTb
994 693 M
(c=9) Rshow
LT8
1078 693 M
399 0 V
574 420 M
0 3937 V
639 0 V
0 -49 V
639 0 V
0 -87 V
638 0 V
0 -152 V
639 0 V
0 -256 V
639 0 V
0 -410 V
639 0 V
0 -599 V
639 0 V
0 -739 V
638 0 V
0 -674 V
639 0 V
0 -376 V
639 0 V
0 -595 V
1.000 UL
LT0
LTb
994 553 M
(c=10) Rshow
LT0
1078 553 M
399 0 V
574 420 M
0 3930 V
639 0 V
0 -54 V
639 0 V
0 -97 V
638 0 V
0 -167 V
639 0 V
0 -279 V
639 0 V
0 -442 V
639 0 V
0 -629 V
639 0 V
0 -742 V
638 0 V
0 -633 V
639 0 V
0 -322 V
639 0 V
0 -565 V
1.000 UL
LTb
574 420 M
6388 0 V
0 4200 V
-6388 0 V
574 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
