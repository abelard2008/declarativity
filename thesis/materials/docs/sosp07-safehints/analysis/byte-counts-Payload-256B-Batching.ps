%!PS-Adobe-2.0 EPSF-2.0
%%Title: byte-counts-Payload-256B-Batching.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Mar 12 12:51:58 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1170 780 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1170 1344 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 2) Rshow
grestore
1.000 UL
LTb
1170 1908 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 4) Rshow
grestore
1.000 UL
LTb
1170 2472 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 6) Rshow
grestore
1.000 UL
LTb
1170 3036 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 8) Rshow
grestore
1.000 UL
LTb
1170 3600 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
1170 4164 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 12) Rshow
grestore
1.000 UL
LTb
1170 4728 M
63 0 V
5525 0 R
-63 0 V
-5681 0 R
gsave 0 setgray
( 14) Rshow
grestore
1.000 UL
LTb
1170 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1791 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
2412 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 3) Cshow
grestore
1.000 UL
LTb
3033 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
3654 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
4274 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
4895 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 7) Cshow
grestore
1.000 UL
LTb
5516 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
6137 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 9) Cshow
grestore
1.000 UL
LTb
6758 780 M
0 63 V
0 3885 R
0 -63 V
0 -4145 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1170 780 M
5588 0 V
0 3948 V
-5588 0 V
0 -3948 V
LTb
260 2754 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Total Kbytes/req) Cshow
grestore
grestore
LTb
3964 130 M
gsave 0 setgray
(f) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
3822 4535 M
gsave 0 setgray
(HQ) Rshow
grestore
LT0
3978 4535 M
687 0 V
1170 1006 M
621 112 V
621 198 V
621 225 V
621 254 V
620 310 V
621 367 V
621 395 V
621 451 V
621 508 V
1170 1006 Pls
1791 1118 Pls
2412 1316 Pls
3033 1541 Pls
3654 1795 Pls
4274 2105 Pls
4895 2472 Pls
5516 2867 Pls
6137 3318 Pls
6758 3826 Pls
4321 4535 Pls
1.000 UP
1.000 UL
LT1
LTb
3822 4275 M
gsave 0 setgray
(HQ++ Batching 1) Rshow
grestore
LT1
3978 4275 M
687 0 V
1170 1006 M
621 112 V
621 198 V
621 225 V
621 254 V
620 310 V
621 367 V
621 395 V
621 451 V
621 508 V
1170 1006 Crs
1791 1118 Crs
2412 1316 Crs
3033 1541 Crs
3654 1795 Crs
4274 2105 Crs
4895 2472 Crs
5516 2867 Crs
6137 3318 Crs
6758 3826 Crs
4321 4275 Crs
1.000 UP
1.000 UL
LT2
LTb
3822 4015 M
gsave 0 setgray
(HQ++ Batching 2) Rshow
grestore
LT2
3978 4015 M
687 0 V
1170 1175 M
621 254 V
621 310 V
621 338 V
621 395 V
620 423 V
621 479 V
621 536 V
621 564 V
254 254 V
1170 1175 Star
1791 1429 Star
2412 1739 Star
3033 2077 Star
3654 2472 Star
4274 2895 Star
4895 3374 Star
5516 3910 Star
6137 4474 Star
4321 4015 Star
1.000 UP
1.000 UL
LT3
LTb
3822 3755 M
gsave 0 setgray
(HQ++ Batching 5) Rshow
grestore
LT3
3978 3755 M
687 0 V
1170 1062 M
621 169 V
621 198 V
621 197 V
621 254 V
620 254 V
621 282 V
621 310 V
621 310 V
621 338 V
1170 1062 Box
1791 1231 Box
2412 1429 Box
3033 1626 Box
3654 1880 Box
4274 2134 Box
4895 2416 Box
5516 2726 Box
6137 3036 Box
6758 3374 Box
4321 3755 Box
1.000 UP
1.000 UL
LT4
LTb
3822 3495 M
gsave 0 setgray
(HQ++ Batching 10) Rshow
grestore
LT4
3978 3495 M
687 0 V
1170 977 M
621 113 V
621 85 V
621 141 V
621 113 V
620 141 V
621 141 V
621 141 V
621 169 V
621 169 V
1170 977 BoxF
1791 1090 BoxF
2412 1175 BoxF
3033 1316 BoxF
3654 1429 BoxF
4274 1570 BoxF
4895 1711 BoxF
5516 1852 BoxF
6137 2021 BoxF
6758 2190 BoxF
4321 3495 BoxF
1.000 UP
1.000 UL
LT5
LTb
3822 3235 M
gsave 0 setgray
(PBFT Batching 1) Rshow
grestore
LT5
3978 3235 M
687 0 V
1170 949 M
621 85 V
621 84 V
621 85 V
621 85 V
620 84 V
621 113 V
621 85 V
621 112 V
621 113 V
1170 949 Circle
1791 1034 Circle
2412 1118 Circle
3033 1203 Circle
3654 1288 Circle
4274 1372 Circle
4895 1485 Circle
5516 1570 Circle
6137 1682 Circle
6758 1795 Circle
4321 3235 Circle
1.000 UP
1.000 UL
LT6
LTb
3822 2975 M
gsave 0 setgray
(PBFT Batching 2) Rshow
grestore
LT6
3978 2975 M
687 0 V
1170 1147 M
621 197 V
621 197 V
621 198 V
621 197 V
620 226 V
621 197 V
621 198 V
621 197 V
621 197 V
1170 1147 CircleF
1791 1344 CircleF
2412 1541 CircleF
3033 1739 CircleF
3654 1936 CircleF
4274 2162 CircleF
4895 2359 CircleF
5516 2557 CircleF
6137 2754 CircleF
6758 2951 CircleF
4321 2975 CircleF
1.000 UP
1.000 UL
LT7
LTb
3822 2715 M
gsave 0 setgray
(PBFT Batching 5) Rshow
grestore
LT7
3978 2715 M
687 0 V
1170 1062 M
621 169 V
621 141 V
621 169 V
621 170 V
620 141 V
621 169 V
621 141 V
621 169 V
621 169 V
1170 1062 TriU
1791 1231 TriU
2412 1372 TriU
3033 1541 TriU
3654 1711 TriU
4274 1852 TriU
4895 2021 TriU
5516 2162 TriU
6137 2331 TriU
6758 2500 TriU
4321 2715 TriU
1.000 UP
1.000 UL
LT8
LTb
3822 2455 M
gsave 0 setgray
(PBFT Batching 10) Rshow
grestore
LT8
3978 2455 M
687 0 V
1170 1034 M
621 113 V
621 141 V
621 141 V
621 112 V
620 141 V
621 141 V
621 113 V
621 141 V
621 141 V
1170 1034 TriUF
1791 1147 TriUF
2412 1288 TriUF
3033 1429 TriUF
3654 1541 TriUF
4274 1682 TriUF
4895 1823 TriUF
5516 1936 TriUF
6137 2077 TriUF
6758 2218 TriUF
4321 2455 TriUF
1.000 UL
LTb
1170 780 M
5588 0 V
0 3948 V
-5588 0 V
0 -3948 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
