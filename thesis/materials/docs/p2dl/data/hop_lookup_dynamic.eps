%!PS-Adobe-2.0 EPSF-2.0
%%Title: hop_lookup_dynamic.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri May 19 09:19:41 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
702 540 M
( 0) Rshow
1.000 UL
LTb
810 1016 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 2) Rshow
1.000 UL
LTb
810 1492 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 4) Rshow
1.000 UL
LTb
810 1968 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 6) Rshow
1.000 UL
LTb
810 2444 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 8) Rshow
1.000 UL
LTb
810 2920 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 10) Rshow
1.000 UL
LTb
810 3396 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 12) Rshow
1.000 UL
LTb
810 3872 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 14) Rshow
1.000 UL
LTb
810 4348 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 16) Rshow
1.000 UL
LTb
810 4824 M
63 0 V
6021 0 R
-63 0 V
-6129 0 R
( 18) Rshow
1.000 UL
LTb
6894 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(38) Cshow
1.000 UL
LTb
6574 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(36) Cshow
1.000 UL
LTb
6254 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(34) Cshow
1.000 UL
LTb
5934 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(32) Cshow
1.000 UL
LTb
5613 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(30) Cshow
1.000 UL
LTb
5293 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(28) Cshow
1.000 UL
LTb
4973 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(26) Cshow
1.000 UL
LTb
4653 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(24) Cshow
1.000 UL
LTb
4333 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(22) Cshow
1.000 UL
LTb
4013 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(20) Cshow
1.000 UL
LTb
3693 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(18) Cshow
1.000 UL
LTb
3372 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(16) Cshow
1.000 UL
LTb
3052 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(14) Cshow
1.000 UL
LTb
2732 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(12) Cshow
1.000 UL
LTb
2412 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(10) Cshow
1.000 UL
LTb
2092 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(8) Cshow
1.000 UL
LTb
1772 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(6) Cshow
1.000 UL
LTb
1452 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(4) Cshow
1.000 UL
LTb
1131 540 M
0 63 V
0 4221 R
0 -63 V
0 -4401 R
(2) Cshow
1.000 UL
LTb
811 540 M
0 63 V
0 4221 R
0 -63 V
811 360 M
(0) Cshow
1.000 UL
LTb
1.000 UL
LTb
810 540 M
6084 0 V
0 4284 V
-6084 0 V
810 540 L
LTb
/Helvetia findfont 220 scalefont setfont
180 2682 M
currentpoint gsave translate 90 rotate 0 0 M
(Mean hop count) Cshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
/Helvetia findfont 220 scalefont setfont
3852 90 M
(Time \(minutes\)) Cshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UP
1.000 UL
LT0
971 3255 M
160 -300 V
161 -372 V
160 -144 V
160 -228 V
160 -96 V
160 -157 V
160 -198 V
160 10 V
160 1 V
160 -186 V
160 140 V
160 -21 V
160 -187 V
160 -9 V
160 -21 V
161 -176 V
160 77 V
160 99 V
160 -21 V
160 11 V
160 -218 V
160 36 V
160 142 V
160 10 V
160 -6 V
160 -136 V
160 -46 V
160 83 V
160 -16 V
161 34 V
160 -95 V
160 70 V
160 -70 V
160 -10 V
160 -6 V
160 -33 V
160 -81 V
971 1835 M
0 2841 V
940 1835 M
62 0 V
940 4676 M
62 0 V
1131 1533 M
0 2843 V
1100 1533 M
62 0 V
-62 2843 R
62 0 V
1292 1673 M
0 1820 V
1261 1673 M
62 0 V
-62 1820 R
62 0 V
1452 1779 M
0 1320 V
1421 1779 M
62 0 V
-62 1320 R
62 0 V
1612 1621 M
0 1180 V
1581 1621 M
62 0 V
-62 1180 R
62 0 V
1772 1427 M
0 1376 V
1741 1427 M
62 0 V
-62 1376 R
62 0 V
1932 1305 M
0 1307 V
1901 1305 M
62 0 V
-62 1307 R
62 0 V
2092 1200 M
0 1119 V
2061 1200 M
62 0 V
-62 1119 R
62 0 V
2252 1209 M
0 1122 V
2221 1209 M
62 0 V
-62 1122 R
62 0 V
2412 1308 M
0 927 V
-31 -927 R
62 0 V
-62 927 R
62 0 V
2572 1045 M
0 1080 V
2541 1045 M
62 0 V
-62 1080 R
62 0 V
129 -800 R
0 800 V
stroke
2701 1325 M
62 0 V
-62 800 R
62 0 V
129 -793 R
0 744 V
-31 -744 R
62 0 V
-62 744 R
62 0 V
3052 1069 M
0 896 V
-31 -896 R
62 0 V
-62 896 R
62 0 V
129 -912 R
0 910 V
-31 -910 R
62 0 V
-62 910 R
62 0 V
129 -803 R
0 654 V
-31 -654 R
62 0 V
-62 654 R
62 0 V
3533 875 M
0 872 V
3502 875 M
62 0 V
-62 872 R
62 0 V
129 -716 R
0 714 V
-31 -714 R
62 0 V
-62 714 R
62 0 V
129 -656 R
0 795 V
-31 -795 R
62 0 V
-62 795 R
62 0 V
129 -787 R
0 738 V
-31 -738 R
62 0 V
-62 738 R
62 0 V
129 -717 R
0 718 V
-31 -718 R
62 0 V
-62 718 R
62 0 V
4333 971 M
0 576 V
4302 971 M
62 0 V
-62 576 R
62 0 V
4493 863 M
0 863 V
4462 863 M
62 0 V
-62 863 R
62 0 V
129 -718 R
0 858 V
-31 -858 R
62 0 V
-62 858 R
62 0 V
129 -824 R
0 811 V
-31 -811 R
62 0 V
-62 811 R
62 0 V
129 -828 R
0 833 V
-31 -833 R
62 0 V
-62 833 R
62 0 V
5133 906 M
0 797 V
5102 906 M
62 0 V
-62 797 R
62 0 V
5293 895 M
0 729 V
5262 895 M
62 0 V
-62 729 R
62 0 V
5453 917 M
0 850 V
5422 917 M
62 0 V
-62 850 R
62 0 V
stroke
5613 877 M
0 898 V
5582 877 M
62 0 V
-62 898 R
62 0 V
5774 924 M
0 872 V
5743 924 M
62 0 V
-62 872 R
62 0 V
5934 819 M
0 891 V
5903 819 M
62 0 V
-62 891 R
62 0 V
6094 836 M
0 998 V
6063 836 M
62 0 V
-62 998 R
62 0 V
6254 824 M
0 881 V
6223 824 M
62 0 V
-62 881 R
62 0 V
6414 755 M
0 1001 V
6383 755 M
62 0 V
-62 1001 R
62 0 V
6574 914 M
0 670 V
6543 914 M
62 0 V
-62 670 R
62 0 V
6734 855 M
0 721 V
6703 855 M
62 0 V
-62 721 R
62 0 V
6894 813 M
0 644 V
6863 813 M
62 0 V
-62 644 R
62 0 V
971 3255 Pls
1131 2955 Pls
1292 2583 Pls
1452 2439 Pls
1612 2211 Pls
1772 2115 Pls
1932 1958 Pls
2092 1760 Pls
2252 1770 Pls
2412 1771 Pls
2572 1585 Pls
2732 1725 Pls
2892 1704 Pls
3052 1517 Pls
3212 1508 Pls
3372 1487 Pls
3533 1311 Pls
3693 1388 Pls
3853 1487 Pls
4013 1466 Pls
4173 1477 Pls
4333 1259 Pls
4493 1295 Pls
4653 1437 Pls
4813 1447 Pls
4973 1441 Pls
5133 1305 Pls
5293 1259 Pls
5453 1342 Pls
5613 1326 Pls
5774 1360 Pls
5934 1265 Pls
6094 1335 Pls
6254 1265 Pls
6414 1255 Pls
6574 1249 Pls
6734 1216 Pls
6894 1135 Pls
1.000 UL
LTb
810 540 M
6084 0 V
0 4284 V
-6084 0 V
810 540 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetia Helvetica
