
In terms of general relevance to networking, note that the NSF has two
major programs targeted at new Internet architectures, FIND and GENI.
Declarative networking provides a flexible and powerful framework for
design and experimentation with such architectures.

More specifically, our paper tackles a number of issues that were
overlooked, or considered out of scope, in previous work in networking
conferences, but are necessary for the realization of declarative
networks:

1.  Our NDlog language retains the formal structure of Datalog, which
    the SIGCOMM Declarative Routing [21] paper by Loo et al. has
    demonstrated to be a natural fit for expressing routing
    protocols. However, Loo's general use of Datalog includes programs
    that cannot be executed unless the network fabric has full NxN
    physical connectivity, which is not usually the case in
    practice. NDlog constrains the language to ensure that all
    expressible programs can be compiled to dataflows that only involve
    messages along the underlying physical links (the "link-restricted"
    rules). This provides a better mapping onto real networking
    components such as routers and switches, allowing us to explore
    practical, highly relevant applications of declarative networking.

2. We introduce provably correct, relaxed versions of the semi-naive
evaluation strategy, called BSN and PSN. Reference [21] alludes to
semi-naive evaluation, but fails to address practical concerns of
asynchrony and failure issues in a distributed environment. PSN and BSN
deal with these issues and provide a practical execution model for
declarative networks.

3. Our notion of eventual consistency is richer than that of prior work
   in networking, and is a contribution on that front to the networking
   literature. This notion (and the associated proofs using view
   maintenance techniques) captures the semantics of *protocol
   outcomes*, rather than just storage consistency of soft state (cf
   Raman and McCanne, SIGCOMM 99).  Our results suggest that a
   declarative framework can provide network designers with a cleaner
   foundation for reasoning about the convergence semantics of network
   protocols.

4. Reference [21] shows that magic sets optimization with predicate
reordering translate from a well-known wired protocol (path vector)
to a wireless protocol (dynamic source routing). We make further
connections by showing that the zone routing protocol used in wireless
networks for adaptive routing can be generalized as hybrid query
rewrites, and more flexibly tuned via cost-based query optimizations. In
addition, our multi-query optimizations address the practical challenge
of scalably supporting a large number of concurrently executing
protocols, a topic explicitly being explored in the NSF programs
mentioned above.

