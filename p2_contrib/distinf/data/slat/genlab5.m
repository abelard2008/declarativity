function prob=generateSlatLab5(varargin)
% problem=generateSlatLab5(basename, time)     or
% problem=generateSlatLab5(problem_obs)
% A five-camera experiment

% Extrinsic parameters: x,y,z (inches), pan, tilt (radians)
ext = [202.5 209.5 89     0-0.03    -0.3; ...
       4     160.5 103.5  pi        -0.3; ...
       203   114   89     0+0.05    -0.3; ...
       61.5  -2    97     pi/2      -0.3; ...
       116   204   141   -pi/2-0.06 -0.7]';

%ext = [202.5 209.5 88.5   0    -0.3; ...
%       4     160.5 104.5  pi   -0.3; ...
%       203   114   90.5   0    -0.3; ...
%       61.5  -2    97     pi/2 -0.3; ...
%       116   200   146   -pi/2 -0.7]';
% Convert to metric system
ext(1:3,:)=ext(1:3,:)*0.0254;

% Intrinsic parameters
KK = {
 [941.4084         0  347.7762;...
         0  861.6208  245.5350;...
         0         0    1.0000]...
...
 [934.6136         0  365.9205;...
         0  856.5431  254.1664;...
         0         0    1.0000]...
...
 [935.5724         0  385.1899;...
         0  855.7490  242.3360;...
         0         0    1.0000]...
...
 [939.2470         0  369.5222;...
         0  859.6859  222.0250;...
         0         0    1.0000]...
...
 [931.1240         0  378.4910;...
         0  851.6338  231.1862;...
         0         0    1.0000]};
% Load new intrinsic parameters
load slat/lab5KK2
         
% Old calibration for cameras 3 and 4
 %[930.7496         0  406.4811;...
 %        0  854.0895  224.9987;...
 %        0         0    1.0000]...
 %[925.2528         0  401.9196;...
 %        0  848.7310  216.7287;...
 %        0         0    1.0000]...

     
calib=generateCalibration(KK, ext);
if length(varargin)==2
  prob = extractSlatObservations(5, varargin{1}, varargin{2});
elseif length(varargin)==1
  prob = varargin{1};
end

% The first camera to see the person
i = find(prob.visible(:,1));
if length(i)==0
  error('The person is not visible from any cameras in the first time step.');
else
  i=i(1);
end

prob.pos=invertProjection(prob.obs(:,1,i),calib(i),0,0,[0 0 1 -1.8]);
prob.calib=calib;
prob.range=[-1 7 -1 9];
prob.sigma_u=3;
prob.sigma_v=3;
prob.geometry={[0 -0.1; 6 -0.1; 6 8; 0 8; 0 -0.1]};
prob.adjacency=[1 1 0 1 0;1 1 0 1 1; 0 0 1 1 1;1 1 1 1 1;0 1 1 1 1];
