program gfs;

define(nodes, keys(0), {String});
define(master, keys(0), {String});

// The nodes in the cluster
nodes("tcp:localhost:5500");
nodes("tcp:localhost:5501");

// The address of the master node
master("tcp:localhost:5500");

// Node, Master node
define(master_per_node, keys(0, 1), {String, String});

master_per_node("tcp:localhost:5500", "tcp:localhost:5500");
master_per_node("tcp:localhost:5501", "tcp:localhost:5500");

//master_per_node(@Node, Master) :- master(@Master), nodes(@Node);

// Node, File name, Contents
define(file, keys(0, 1), {String, String, String});

file("tcp:localhost:5500", "Foo", "Bar");
file("tcp:localhost:5500", "Bar", "Baz");

// Source node, Request ID, Request type, Request arguments
define(request_started, keys(0, 1), {String, Integer, String, String});

// Source node, Request ID, File name
define(cat_request, keys(0, 1), {String, Integer, String});

// Source node, Request ID
define(ls_request, keys(0, 1), {String, Integer});

// Master node, Request Id, Source node, Response
define(cat_request_done, keys(0, 1), {String, Integer, String, String});
define(ls_request_done, keys(0, 1), {String, Integer, String, String});

// Node, Request ID, File contents
define(cat_response, keys(0, 1), {String, Integer, String});

// Node, Request ID, Listing contents
define(ls_response, keys(0, 1), {String, Integer, String});

request_started(@Source, Id, RequestType, Filename) :-
    cat_request(@Source, Id, Filename), RequestType := "Cat";
request_started(@Source, Id, RequestType, "Foo") :-
    ls_request(@Source, Id), RequestType := "Ls";

request(@Master, Id, Source, RequestType, Args) :-
    self(@Source), master_per_node(@Source, Master),
    request_started(@Source, Id, RequestType, Args);

// If we get a "cat" request for a file that exists, send back the
// contents of the file
// XXX: what if the file doesn't exist?
cat_request_done(@Master, Id, Source, FContent) :-
    request(@Master, Id, Source, RequestType, FName),
    RequestType == "Cat",
    file(@Master, FName, FContent);

// If we got an "ls" request, send back the names of all the files in
// the FS
ls_request_done(@Master, Id, Source, ListingContent) :-
    request(@Master, Id, Source, RequestType, _),
    RequestType == "Ls",
    ListingContent := "Foo";

cat_response(@Source, Id, FContent) :-
    cat_request_done(@Master, Id, Source, FContent);

ls_response(@Source, Id, ListingContent) :-
    ls_request_done(@Master, Id, Source, ListingContent);
