program glue;

watch(gfs_global::file,ae);

public
paxos_global::decreeRequest(Master, Decree, From) :-
  paxos_global::id(Master),
  // err
  From := Master,
  gfs::create_request_pending(Master, Id, Name, true, _),
  gfs::request(Master, Id, Name, _, FName, _),
  Decree := FName + ",i";

public
paxos_global::decreeRequest(Master, Decree, From) :-
  paxos_global::id(Master),
  From := Master,
  gfs::rm_request_pending(Master, Id, Name, true, _),
  gfs::request(Master, Id, Name, _, FName, _),
  Decree := FName + ",d";

public 
gfs_global::file(Master, Name, Blocks) :-
  periodic(_,_,_),
  paxos_global::requestStatus(Master, From, Decree, Instance, "passed"),
  Name := Decree.split(",")[0],
  Op := Decree.split(",")[1],
  Blocks := new ValueList(),
  Op == "i";

timer(periodic,physical,1000,1000,1000);

public
delete
gfs_global::file(Master, Name, Content) :- 
  periodic(_,_,_),
  gfs_global::file(Master, Name, Content),
  paxos_global::requestStatus(Master, From, Decree, Instance, "passed"),
  Name := Decree.split(",")[0],
  Op := Decree.split(",")[1],
  Op == "d";

watch(gfs_global::create_request_done,aeid);
watch(gfs_global::file,ae);


public 
green
gfs_global::create_request_done(Master, Id, Source, Status,Error) :-
  gfs::create_request_pending(Master, Id, Source, Status,Error),
  gfs_global::file(Master,FName,Content),
  gfs::request(Master, Id, Name, _, FName, _);

public 
gfs_global::rm_request_done(Master, Id, Source, Status,Error) :-
  gfs::rm_request_pending(Master, Id, Source, Status,Error),
  //paxos_global::requestStatus(Master, Client, Decree, Instance, Message),
  gfs_global::file#delete(Master,FName,Content),
  gfs::request(Master, Id, Name, _, FName, _);///,
  //Message == "passed",
  //FName == Decree.split(",")[0],
  //Op := Decree.split(",")[1],
 // Op == "d";


public 
red
gfs_global::create_request_done(Master, Id, Source, Status, Error) :-
  gfs::create_request_pending(Master, Id, Source, Status, Error),
  Status == false;

public 
gfs_global::rm_request_done(Master, Id, Source, Status, Error) :-
  gfs::rm_request_pending(Master, Id, Source, Status, Error),
  Status == false;

