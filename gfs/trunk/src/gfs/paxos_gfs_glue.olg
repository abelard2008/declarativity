program glue;

watch(gfs_global::file,ae);

public
paxos_global::decreeRequest(Master,Decree,From) :-
  paxos_global::id(Master),
  // err
  From := Master,
  gfs::create_request_pending(Master, Id, Name, true, _),
  gfs::request(Master, Id, Name, _, FName, _),
  Decree := FName + ",i";

public
paxos_global::decreeRequest(Master,Decree,From) :-
  paxos_global::id(Master),
  From := Master,
  gfs::rm_request_pending(Master, Id, Name, true, _),
  gfs::request(Master, Id, Name, _, FName, _),
  Decree := FName + ",d";

public 
gfs_global::file(Master,Name,Content) :- 
  paxos_global::requestStatus(Master,From,Decree,Instance,"passed"),
  Name := Decree.split(",")[0],
  Content := "<SOME REFERENCE>",
  Op := Decree.split(",")[1],
  // if I got this through the paxos log, that is...
  //notin gfs_global::file(Master,Name,_),
  Op == "i";

public
delete
gfs_global::file(Master,Name,Content) :- 
  gfs_global::file(Master,Name,Content),
  paxos_global::requestStatus(Master,From,Decree,Instance,"passed"),
  Name := Decree.split(",")[0],
  Op := Decree.split(",")[1],
  Op == "d";

watch(gfs_global::create_request_done,aeid);
watch(gfs_global::file,ae);


public 
green
gfs_global::create_request_done(Master, Id, Source, Status,Error) :-
  gfs::create_request_pending(Master, Id, Source, Status,Error),
  paxos_global::requestStatus(Master,Client,Decree,Instance,Message),
  gfs::request(Master, Id, Name, _, FName, _),
  Message == "passed",
  FName == Decree.split(",")[0],
  Op := Decree.split(",")[1],
  Op == "i";

public 
gfs_global::rm_request_done(Master, Id, Source, Status,Error) :-
  gfs::rm_request_pending(Master, Id, Source, Status,Error),
  paxos_global::requestStatus(Master,Client,Decree,Instance,Message),
  gfs::request(Master, Id, Name, _, FName, _),
  Message == "passed",
  FName == Decree.split(",")[0],
  Op := Decree.split(",")[1],
  Op == "d";


public 
red
gfs_global::create_request_done(Master, Id, Source, Status,Error) :-
  gfs::create_request_pending(Master, Id, Source, Status,Error),
  Status == false;

public 
gfs_global::rm_request_done(Master, Id, Source, Status,Error) :-
  gfs::rm_request_pending(Master, Id, Source, Status,Error),
  Status == false;

