program gfs;

import jol.types.basic.ValueList;
import java.io.File;
import java.util.ArrayList;
import java.lang.Object;
import gfs.NValueList;
import gfs.Conf;

define(file,keys(0,1),{String,String});
define(dir,keys(0),{String,File,ValueList});

timer(clock,physical,5000,5000,1000);


watch(dir,ae);
watch(file,ae);

define(datadir,keys(0),{String,String});
watch(datadir,ae);
datadir(Conf.getSelfAddress(),"gfs_data");

dir(Host,DirObj,DirList) :-
    datadir(Host,Dir),
    Dn == Host,
    DirObj := new File(Dir),
    DirList := DirObj.isDirectory() ? new ValueList(DirObj.list()) : new ValueList(),
    clock(_,_,_);

define(indx,keys(0),{String,Integer});
watch(indx,ae);
indx(Host,0) :-   
    dir#insert(Host,Dir,List);

delete
file(Host,File) :-
    file(Host,File),
    dir#insert(Host,Dir,List);

indx(Host,Next) :-
    indx(Host,Old),
    file#insert(Host,File),
    Next := Old + 1;


file(Host,File) :-
    dir(Host,Dir,List),
    indx#insert(Host,I),
    I < List.size(),
    B := List.get(I),
    File := B.toString();


define(heartBeat,keys(0,1,2),{String,String,String,Long});
watch(heartBeat,ae);
heartBeat(Host,Master,File,Tstamp) :-
    file(Host,File),
    masters(Host,Master),
    clock(_,_,_),
    Tstamp := java.lang.System.currentTimeMillis();


define(sendHeartBeat,keys(0,1,2,3),{String,String,String,Long});
watch(sendHeartBeat,ae);
sendHeartBeat(@Master,Host,File,Tstamp) :-
    heartBeat(@Host,Master,File,Tstamp);

define(masters,keys(0,1),{String,String});
define(mindx,keys(0),{String,Integer});
mindx(Conf.getSelfAddress(),0);

watch(dnodes,ae);
watch(dindx,ae);

mindx(Host,I) :-
    mindx(Host,O),
    masters#insert(Host,Master),
    O < Conf.getNumMasters()-1,
    I := O + 1;

masters(Host,Master) :-
    mindx(Host,I),
    Master := Conf.getMasterAddress(I);


