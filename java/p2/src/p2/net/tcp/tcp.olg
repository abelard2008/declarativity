program tcp;

import p2.net.Network;
import p2.net.Message;
import p2.net.Address;

/* Message receive tuples are sent via Java (see TCP.java). */
define(receive, {Address, Message});
define(send,    {Address, Message});

watch(send, s);
watch(receive, r);
watch(network::buffer, isr);

/******* Message send  */
public
send(Location, Msg) :-
	network::buffer(Protocol, Direction, Location, Msg),
	network::connection(Protocol, Location, Channel),
	Protocol == "tcp", Direction == "send", Channel.send(Msg);

/* Clean up buffer queue after sending message. */
delete
network::buffer(Protocol, Direction, Location, Msg) :-
	send(Location, Msg),
	network::buffer(Protocol, Direction, Location, Msg),
	Protocol == "tcp";
	
/* Create a tcp connection to the address if !exists. */
public
network::connection("tcp", Location, null) :-
	network::buffer#insert(Protocol, Direction, Location, Msg),
	Protocol == "tcp",
	notin network::connection("tcp", Location, _);


/******** Receive message */
network::buffer(Msg.layer(), "receive", Location, Msg) :-
	receive(Location, Msg);
	