program network;

import p2.net.NetworkMessage;
import p2.net.Address;

/* The message queue: message(Direction, Location, NetworkMessage) */
define(receive, {Long, Message});
define(send,    {String, Address, Message});

/******** Receive message. */
public
receive(ScheduleTime, Msg) :-
	network::buffer#insert(Protocol, Direction, Location, Msg),
	global::clock(_, Time),
	Protocol == "network", Direction == "receive",
	ScheduleTime := Time + 1;
	
/* Schedule messages that have been received. */
schedule(ScheduleTime, Program, Name, Ins, Dels) :-
	receive(ScheduleTime, Msg),
	Program := ((NetworkMessage)Msg).program(),
	Name    := ((NetworkMessage)Msg).name(),
	Ins     := ((NetworkMessage)Msg).insertions(),
	Dels    := ((NetworkMessage)Msg).deletions();

/* Clear out received messages. */
delete
network::buffer(Protocol, Direction, Location, Msg) :-
	receive(ScheduleTime, Msg),
	network::buffer(Protocol, Direction, Location, Msg);
	
/******** Send message. */
public
send(Protocol, Location, Msg) :-
	network::buffer#insert(Layer, Direction, Location, Msg),
	Layer == "network", Direction == "send",
	Protocol := ((NetworkMessage) Msg).protocol();

watch(network::buffer, rs);
watch(send, s);

network::buffer(Protocol, "send", Location, Msg) :-
	send(Protocol, Location, Msg);
	
