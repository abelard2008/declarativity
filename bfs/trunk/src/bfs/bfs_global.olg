program bfs;

import bfs.Conf;

// Node, file ID, parent file ID (or null), file name, is directory?
define(stasis_file, keys(0, 1), {String, Integer, Integer, String, Boolean});

// Node, path name (from root), file ID
// (derivable from stasis_file, needs to fire events at runtime)
define(fpath, keys(0, 1, 2), {String, String, Integer});

// Node, file ID, file size
define(stasis_fsize, keys(0, 1), {String, Integer, Long});

// Node, chunk ID, file ID
define(stasis_fchunk, keys(0, 1), {String, Integer, Integer});

// Master, Cnt, DataNode, Id
define(possible_choices, keys(0,2), {String, Integer, String, Integer});

define(migration_choices, keys(0,1,2), {String, String, Integer});

// Master node, Request ID, Client node, Request type, Arg
define(request, keys(0, 1), {String, Integer, String, String, String});

// Node, Master node
define(master_for_node, keys(0, 1), {String, String});
watch(master_for_node, ae);
