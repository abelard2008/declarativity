program path;

define(link, keys(0,1), {String,String});
define(path, keys(0,1), {String,String,Integer});
define(shortestPath, keys(0,1), {String,String,Integer});
link("1","2");
link("2","3");
link("3","4");
link("2","4");

link("5","6");
link("6","7");
link("7","8");
link("8","9");

watch(link, d);
watch(path, id);
watch(shortestPath, di);

path(Source, Destination, 1) :- link(Source, Destination);

path(Source,Destination,H) :-
	path(Source, Intermediate, Hops), link(Intermediate, Destination), H := Hops+2;

shortestPath(Source, Destination, min<Hops>) :- 
	path(Source, Destination, Hops);

//delete link("2","4") :- periodic(Id, 1L, 1L, 5L);
