grammar Ddl

rule program
	(s statement)*
end

rule statement
	'table' s tablename opar collist cpar keys? 
end

rule collist
	column (comma column)*
end

rule column
	key_colname s dtype
end

rule key_colname
	 colname / key_modifier colname 
end

rule colname
	[a-zA-Z0-9_]+
end

rule tablename
	[a-zA-Z0-9]+ '::' [a-zA-Z0-9]+ / [a-zA-Z0-9]+
end

rule dtype
	'String' / 'Integer' / 'Float' / 'Object' / 'TableName' / 'TableType' / 'Tuple' / 'Boolean' / 'Key' / 'Index' / 'SelectionTerm' / 'Query' / 'Program' / 'Predicate' / "WatchOp::Modifier"
end	

rule keys
	s 'keys' opar keylist cpar
end

rule keylist
	numlist / strlist
end

rule numlist
	num (comma num)*
end

rule strlist
	str (comma str)*
end

rule num
	[0-9]+
end

rule str
	[a-zA-Z0-9]+
end

rule comma
	s ',' s
end

rule acabo
	s ';' s
end

rule key_modifier
	'+'
end

rule opar
	s '(' s
end

rule cpar 
	s ')' s
end

rule s
	[ \t\n]*
end

end
