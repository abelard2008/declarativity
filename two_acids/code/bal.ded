# Account balance persists at next timestep unless revoked
bal(Acct, Val)@next :- bal(Acct, Val), (*$\neg$*)revoke_bal(Acct, Val). (*\label{line:neg}*)

# Apply writes upon request.  Atomically at next timestep: 
#              The balance is dead; long live the balance!
revoke_bal(Acct, Val)@next :- write(_, _, _), bal(Acct, Val). (*\label{line:write_trans}*)
bal(Acct, New)@next :- write(Acct, New, _).

# Simple transaction logic with scheduler interface 
read(Acct, Val, Xid) :- bal(Acct, Val), read_req(Acct, Xid).
write(Acct, Val+Cred, Xid) :- read(Acct, Val, Xid), (*\label{line:write_req}*)
                              write_req(Acct, Cred, Xid). 

write_req(Acct, Cred, Xid)@async :- sched_W(Acct, Cred, Xid).(*\label{line:async-beg}*)
read_req(Acct, Xid)@async :- sched_R(Acct, Xid).(*\label{line:async-end}*)
